{
  "name": "SemanticModel",
  "compatibilityLevel": 1200,
  "model": {
    "culture": "en-US",
    "dataSources": [
      {
        "name": "Clarity",
        "connectionString": "Provider=SQLNCLI11;Data Source=clarityprodpri,60304;Initial Catalog=Clarity;Integrated Security=SSPI;Persist Security Info=false",
        "impersonationMode": "impersonateAccount",
        "account": "mdco\\epic777",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "SqlServer"
          }
        ]
      }
    ],
    "tables": [
      {
        "name": "Charge Review",
        "columns": [
          {
            "name": "Department ID",
            "dataType": "double",
            "sourceColumn": "Department ID",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "Department",
            "dataType": "string",
            "sourceColumn": "Department",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Location ID",
            "dataType": "double",
            "sourceColumn": "Location ID",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "Location",
            "dataType": "string",
            "sourceColumn": "Location",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Region ID",
            "dataType": "string",
            "sourceColumn": "Region ID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Region",
            "dataType": "string",
            "sourceColumn": "Region",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Service Date",
            "dataType": "dateTime",
            "sourceColumn": "Service Date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "Entry Date",
            "dataType": "dateTime",
            "sourceColumn": "Entry Date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "Exit Date",
            "dataType": "dateTime",
            "sourceColumn": "Exit Date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "CHARGE REVIEW DAYS",
            "dataType": "int64",
            "sourceColumn": "CHARGE REVIEW DAYS",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Account ID",
            "dataType": "double",
            "sourceColumn": "Account ID",
            "sourceProviderType": "Decimal"
          },
          {
            "type": "calculated",
            "name": "Market",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "SWITCH('Charge Review'[Location ID]",
              "",
              ",11106,\"SPRINGFIELD\" ",
              "",
              ",11149,\"SPRINGFIELD\" ",
              "",
              ",11124,\"SPRINGFIELD\" ",
              "",
              ",19147,\"SPRINGFIELD\" ",
              "",
              ",18110,\"MRG\" ",
              "",
              ",19126,\"MRG\" ",
              "",
              ",18120,\"DEFIANCE\" ",
              "",
              ",18121,\"DEFIANCE\" ",
              "",
              ",19120,\"DEFIANCE\" ",
              "",
              ",19127,\"DEFIANCE\" ",
              "",
              ",19107,\"KENTUCKY - OTHER ENTITIES\" ",
              "",
              ",19108,\"KENTUCKY - OTHER ENTITIES\" ",
              "",
              ",19116,\"KENTUCKY - OTHER ENTITIES\" ",
              "",
              ",19118,\"KENTUCKY - OTHER ENTITIES\" ",
              "",
              ",'Charge Review'[Region]",
              "",
              ") ",
              "",
              " "
            ]
          },
          {
            "type": "calculated",
            "name": "Rev Cycle",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "SWITCH('Charge Review'[Location ID]",
              "",
              ",11,   \"REV CYCLE\" ",
              ",11101,\"REV CYCLE\" ",
              ",11102,\"REV CYCLE\" ",
              ",11103,\"REV CYCLE\" ",
              ",11104,\"REV CYCLE\" ",
              ",11105,\"REV CYCLE\" ",
              ",11115,\"REV CYCLE\" ",
              ",11116,\"REV CYCLE\" ",
              ",11122,\"REV CYCLE\" ",
              ",11132,\"REV CYCLE\" ",
              ",11138,\"REV CYCLE\" ",
              ",11139,\"REV CYCLE\" ",
              ",11140,\"REV CYCLE\" ",
              ",11141,\"REV CYCLE\" ",
              ",11142,\"REV CYCLE\" ",
              ",11143,\"REV CYCLE\" ",
              ",11144,\"REV CYCLE\" ",
              ",11146,\"REV CYCLE\" ",
              ",11151,\"REV CYCLE\" ",
              ",19151,\"REV CYCLE\" ",
              ",19154,\"REV CYCLE\" ",
              ",19148,\"REV CYCLE\" ",
              ",19155,\"REV CYCLE\" ",
              ",19156,\"REV CYCLE\" ",
              ",19149,\"REV CYCLE\" ",
              ",19150,\"REV CYCLE\" ",
              ",19152,\"REV CYCLE\" ",
              ",19153,\"REV CYCLE\" ",
              "",
              ",11106,\"REV CYCLE\" ",
              ",11149,\"REV CYCLE\" ",
              ",11124,\"REV CYCLE\" ",
              ",19147,\"REV CYCLE\" ",
              "",
              ",13,   \"REV CYCLE\" ",
              ",13104,\"REV CYCLE\" ",
              ",13105,\"REV CYCLE\" ",
              ",13116,\"REV CYCLE\" ",
              ",19142,\"REV CYCLE\" ",
              ",19143,\"REV CYCLE\" ",
              ",19144,\"REV CYCLE\" ",
              ",19145,\"REV CYCLE\" ",
              "",
              ",16,   \"REV CYCLE\" ",
              ",16102,\"REV CYCLE\" ",
              ",16103,\"REV CYCLE\" ",
              ",16104,\"REV CYCLE\" ",
              ",19132,\"REV CYCLE\" ",
              ",19133,\"REV CYCLE\" ",
              ",19134,\"REV CYCLE\" ",
              "  ",
              ",17,   \"REV CYCLE\" ",
              ",17105,\"REV CYCLE\" ",
              ",17106,\"REV CYCLE\" ",
              ",17107,\"REV CYCLE\" ",
              ",17108,\"REV CYCLE\" ",
              ",17109,\"REV CYCLE\" ",
              ",17110,\"REV CYCLE\" ",
              ",17112,\"REV CYCLE\" ",
              ",17113,\"REV CYCLE\" ",
              ",19135,\"REV CYCLE\" ",
              ",19136,\"REV CYCLE\" ",
              ",19137,\"REV CYCLE\" ",
              ",19138,\"REV CYCLE\" ",
              ",19139,\"REV CYCLE\" ",
              ",19140,\"REV CYCLE\" ",
              ",19141,\"REV CYCLE\" ",
              "",
              ",18,   \"REV CYCLE\" ",
              ",18101,\"REV CYCLE\" ",
              ",18102,\"REV CYCLE\" ",
              ",18103,\"REV CYCLE\" ",
              ",18104,\"REV CYCLE\" ",
              ",18105,\"REV CYCLE\" ",
              ",18130,\"REV CYCLE\" ",
              ",18131,\"REV CYCLE\" ",
              ",18132,\"REV CYCLE\" ",
              ",18133,\"REV CYCLE\" ",
              ",19119,\"REV CYCLE\" ",
              ",19121,\"REV CYCLE\" ",
              ",19122,\"REV CYCLE\" ",
              ",19123,\"REV CYCLE\" ",
              ",19124,\"REV CYCLE\" ",
              ",19128,\"REV CYCLE\" ",
              ",19129,\"REV CYCLE\" ",
              ",19130,\"REV CYCLE\" ",
              ",19131,\"REV CYCLE\" ",
              ",18110,\"REV CYCLE\" ",
              ",19126,\"REV CYCLE\" ",
              ",18120,\"REV CYCLE\" ",
              ",18121,\"REV CYCLE\" ",
              ",19120,\"REV CYCLE\" ",
              ",19127,\"REV CYCLE\" ",
              "",
              ",19,   \"REV CYCLE\" ",
              ",19101,\"REV CYCLE\" ",
              ",19102,\"REV CYCLE\" ",
              ",19106,\"REV CYCLE\" ",
              ",19107,\"REV CYCLE\" ",
              ",19108,\"REV CYCLE\" ",
              ",19116,\"REV CYCLE\" ",
              ",19118,\"REV CYCLE\" ",
              "",
              ",\"OTHER\" ",
              "",
              ") "
            ]
          }
        ],
        "partitions": [
          {
            "name": "Charge Review",
            "dataView": "full",
            "source": {
              "query": [
                "select",
                " arpb_tx.DEPARTMENT_ID as 'Department ID'",
                ",dep.DEPARTMENT_NAME as 'Department'",
                ",arpb_tx.LOC_ID as 'Location ID'",
                ",loc.LOC_NAME as 'Location'",
                ",sa.RPT_GRP_TEN as 'Region ID'",
                ",upper(sa.NAME) as 'Region'",
                ",arpb_tx.SERVICE_DATE as 'Service Date'",
                ",crw.ENTRY_DATE as 'Entry Date'",
                ",crw.EXIT_DATE as 'Exit Date'",
                ",datediff(day, crw.ENTRY_DATE, crw.EXIT_DATE) as 'CHARGE REVIEW DAYS'",
                ",arpb_tx.ACCOUNT_ID as 'Account ID'",
                "",
                "FROM ARPB_TRANSACTIONS arpb_tx",
                "left join ARPB_TX_MODERATE atm on atm.TX_ID = arpb_tx.TX_ID",
                "left join ARPB_TX_VOID atv on atv.TX_ID = arpb_tx.TX_ID",
                "left join V_ARPB_CHG_REVIEW_WQ crw on crw.TAR_ID = atm.SOURCE_TAR_ID",
                "left join CLARITY_LOC loc on loc.LOC_ID = arpb_tx.LOC_ID",
                "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
                "left join CLARITY_DEP dep on dep.DEPARTMENT_ID = arpb_tx.DEPARTMENT_ID",
                "",
                "       ",
                "WHERE  arpb_tx.TX_TYPE_C=1 ",
                "and (atv.OLD_ETR_ID IS NULL and atv.REPOSTED_ETR_ID IS NULL and atv.REPOST_TYPE_C IS NULL and atv.RETRO_CHARGE_ID IS NULL)",
                "and arpb_tx.SERVICE_AREA_ID in  (11,13,16,17,18,19)",
                "and arpb_tx.SERVICE_DATE >= '01/01/2017'",
                "and arpb_tx.SERVICE_DATE <= CONVERT(varchar,dateadd(d,-(day(getdate())),getdate()),101)"
              ],
              "dataSource": "Clarity"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select",
                  " arpb_tx.DEPARTMENT_ID as 'Department ID'",
                  ",dep.DEPARTMENT_NAME as 'Department'",
                  ",arpb_tx.LOC_ID as 'Location ID'",
                  ",loc.LOC_NAME as 'Location'",
                  ",sa.RPT_GRP_TEN as 'Region ID'",
                  ",upper(sa.NAME) as 'Region'",
                  ",arpb_tx.SERVICE_DATE as 'Service Date'",
                  ",crw.ENTRY_DATE as 'Entry Date'",
                  ",crw.EXIT_DATE as 'Exit Date'",
                  ",datediff(day, crw.ENTRY_DATE, crw.EXIT_DATE) as 'CHARGE REVIEW DAYS'",
                  ",arpb_tx.ACCOUNT_ID as 'Account ID'",
                  "",
                  "FROM ARPB_TRANSACTIONS arpb_tx",
                  "left join ARPB_TX_MODERATE atm on atm.TX_ID = arpb_tx.TX_ID",
                  "left join ARPB_TX_VOID atv on atv.TX_ID = arpb_tx.TX_ID",
                  "left join V_ARPB_CHG_REVIEW_WQ crw on crw.TAR_ID = atm.SOURCE_TAR_ID",
                  "left join CLARITY_LOC loc on loc.LOC_ID = arpb_tx.LOC_ID",
                  "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
                  "left join CLARITY_DEP dep on dep.DEPARTMENT_ID = arpb_tx.DEPARTMENT_ID",
                  "",
                  "       ",
                  "WHERE  arpb_tx.TX_TYPE_C=1 ",
                  "and (atv.OLD_ETR_ID IS NULL and atv.REPOSTED_ETR_ID IS NULL and atv.REPOST_TYPE_C IS NULL and atv.RETRO_CHARGE_ID IS NULL)",
                  "and arpb_tx.SERVICE_AREA_ID in  (11,13,16,17,18,19)",
                  "and arpb_tx.SERVICE_DATE >= '01/01/2017'",
                  "and arpb_tx.SERVICE_DATE <= CONVERT(varchar,dateadd(d,-(day(getdate())),getdate()),101)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Chg Review Count",
            "expression": [
              "",
              "var NotBlank = Filter('Charge Review',NOT(ISBLANK('Charge Review'[Exit Date])))",
              "",
              "RETURN CALCULATE(COUNT('Charge Review'[Account ID]),NotBlank)"
            ],
            "formatString": "#,0",
            "displayFolder": "Charge Review"
          },
          {
            "name": "Chg Review Days",
            "expression": [
              "",
              "",
              "var NotBlank = Filter('Charge Review',NOT(ISBLANK('Charge Review'[Exit Date])))",
              "",
              "RETURN CALCULATE(SUM('Charge Review'[CHARGE REVIEW DAYS]),NotBlank)"
            ],
            "formatString": "#,0",
            "displayFolder": "Charge Review"
          },
          {
            "name": "Avg Chg Review Days",
            "expression": "'Charge Review'[Chg Review Days]/'Charge Review'[Chg Review Count]",
            "formatString": "0.00",
            "displayFolder": "Charge Review"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select",
              " arpb_tx.DEPARTMENT_ID as 'Department ID'",
              ",dep.DEPARTMENT_NAME as 'Department'",
              ",arpb_tx.LOC_ID as 'Location ID'",
              ",loc.LOC_NAME as 'Location'",
              ",sa.RPT_GRP_TEN as 'Region ID'",
              ",upper(sa.NAME) as 'Region'",
              ",arpb_tx.SERVICE_DATE as 'Service Date'",
              ",crw.ENTRY_DATE as 'Entry Date'",
              ",crw.EXIT_DATE as 'Exit Date'",
              ",datediff(day, crw.ENTRY_DATE, crw.EXIT_DATE) as 'CHARGE REVIEW DAYS'",
              ",arpb_tx.ACCOUNT_ID as 'Account ID'",
              "",
              "FROM ARPB_TRANSACTIONS arpb_tx",
              "left join ARPB_TX_MODERATE atm on atm.TX_ID = arpb_tx.TX_ID",
              "left join ARPB_TX_VOID atv on atv.TX_ID = arpb_tx.TX_ID",
              "left join V_ARPB_CHG_REVIEW_WQ crw on crw.TAR_ID = atm.SOURCE_TAR_ID",
              "left join CLARITY_LOC loc on loc.LOC_ID = arpb_tx.LOC_ID",
              "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
              "left join CLARITY_DEP dep on dep.DEPARTMENT_ID = arpb_tx.DEPARTMENT_ID",
              "",
              "       ",
              "WHERE  arpb_tx.TX_TYPE_C=1 ",
              "and (atv.OLD_ETR_ID IS NULL and atv.REPOSTED_ETR_ID IS NULL and atv.REPOST_TYPE_C IS NULL and atv.RETRO_CHARGE_ID IS NULL)",
              "and arpb_tx.SERVICE_AREA_ID in  (11,13,16,17,18,19)",
              "and arpb_tx.SERVICE_DATE >= '01/01/2017'",
              "and arpb_tx.SERVICE_DATE <= CONVERT(varchar,dateadd(d,-(day(getdate())),getdate()),101)"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Charge Review"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select",
              " arpb_tx.DEPARTMENT_ID as 'Department ID'",
              ",dep.DEPARTMENT_NAME as 'Department'",
              ",arpb_tx.LOC_ID as 'Location ID'",
              ",loc.LOC_NAME as 'Location'",
              ",sa.RPT_GRP_TEN as 'Region ID'",
              ",upper(sa.NAME) as 'Region'",
              ",arpb_tx.SERVICE_DATE as 'Service Date'",
              ",crw.ENTRY_DATE as 'Entry Date'",
              ",crw.EXIT_DATE as 'Exit Date'",
              ",datediff(day, crw.ENTRY_DATE, crw.EXIT_DATE) as 'CHARGE REVIEW DAYS'",
              ",arpb_tx.ACCOUNT_ID as 'Account ID'",
              "",
              "FROM ARPB_TRANSACTIONS arpb_tx",
              "left join ARPB_TX_MODERATE atm on atm.TX_ID = arpb_tx.TX_ID",
              "left join ARPB_TX_VOID atv on atv.TX_ID = arpb_tx.TX_ID",
              "left join V_ARPB_CHG_REVIEW_WQ crw on crw.TAR_ID = atm.SOURCE_TAR_ID",
              "left join CLARITY_LOC loc on loc.LOC_ID = arpb_tx.LOC_ID",
              "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
              "left join CLARITY_DEP dep on dep.DEPARTMENT_ID = arpb_tx.DEPARTMENT_ID",
              "",
              "       ",
              "WHERE  arpb_tx.TX_TYPE_C=1 ",
              "and (atv.OLD_ETR_ID IS NULL and atv.REPOSTED_ETR_ID IS NULL and atv.REPOST_TYPE_C IS NULL and atv.RETRO_CHARGE_ID IS NULL)",
              "and arpb_tx.SERVICE_AREA_ID in  (11,13,16,17,18,19)",
              "and arpb_tx.SERVICE_DATE >= '01/01/2017'",
              "and arpb_tx.SERVICE_DATE <= CONVERT(varchar,dateadd(d,-(day(getdate())),getdate()),101)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Date - Exit",
        "columns": [
          {
            "name": "CALENDAR_DT",
            "dataType": "dateTime",
            "sourceColumn": "CALENDAR_DT",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "CALENDAR_DT_STR",
            "dataType": "string",
            "sourceColumn": "CALENDAR_DT_STR",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "YEAR_MONTH",
            "dataType": "string",
            "sourceColumn": "YEAR_MONTH",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "YEAR",
            "dataType": "int64",
            "sourceColumn": "YEAR",
            "sourceProviderType": "Integer"
          },
          {
            "name": "MONTH_NAME",
            "dataType": "string",
            "sourceColumn": "MONTH_NAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "MONTHNAME_YEAR",
            "dataType": "string",
            "sourceColumn": "MONTHNAME_YEAR",
            "sortByColumn": "YEAR_MONTH",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "Date - Exit",
            "dataView": "full",
            "source": {
              "query": [
                "select ",
                " dd.CALENDAR_DT",
                ",dd.CALENDAR_DT_STR",
                ",dd.YEAR_MONTH",
                ",dd.YEAR",
                ",dd.MONTH_NAME",
                ",dd.MONTHNAME_YEAR",
                "",
                "from CLARITY.dbo.DATE_DIMENSION dd",
                "",
                "where dd.CALENDAR_DT >= '1/1/2017'",
                "and dd.CALENDAR_DT <= getdate()"
              ],
              "dataSource": "Clarity"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  " dd.CALENDAR_DT",
                  ",dd.CALENDAR_DT_STR",
                  ",dd.YEAR_MONTH",
                  ",dd.YEAR",
                  ",dd.MONTH_NAME",
                  ",dd.MONTHNAME_YEAR",
                  "",
                  "from CLARITY.dbo.DATE_DIMENSION dd",
                  "",
                  "where dd.CALENDAR_DT >= '1/1/2017'",
                  "and dd.CALENDAR_DT <= getdate()</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              " dd.CALENDAR_DT",
              ",dd.CALENDAR_DT_STR",
              ",dd.YEAR_MONTH",
              ",dd.YEAR",
              ",dd.MONTH_NAME",
              ",dd.MONTHNAME_YEAR",
              "",
              "from CLARITY.dbo.DATE_DIMENSION dd",
              "",
              "where dd.CALENDAR_DT >= '1/1/2017'",
              "and dd.CALENDAR_DT <= getdate()"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Date - Exit"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              " dd.CALENDAR_DT",
              ",dd.CALENDAR_DT_STR",
              ",dd.YEAR_MONTH",
              ",dd.YEAR",
              ",dd.MONTH_NAME",
              ",dd.MONTHNAME_YEAR",
              "",
              "from CLARITY.dbo.DATE_DIMENSION dd",
              "",
              "where dd.CALENDAR_DT >= '1/1/2017'",
              "and dd.CALENDAR_DT <= getdate()</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "073c0c87-e7dc-49b9-aafa-1811a4f61a54",
        "fromTable": "Charge Review",
        "fromColumn": "Exit Date",
        "toTable": "Date - Exit",
        "toColumn": "CALENDAR_DT"
      }
    ],
    "roles": [
      {
        "name": "Role",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "MDCO\\Corp-EPIC_Clarity_Reporting_Group",
            "memberId": "S-1-5-21-448539723-1085031214-725345543-141188"
          },
          {
            "memberName": "MDCO\\Corp-EPIC_Clarity_PBUsers",
            "memberId": "S-1-5-21-448539723-1085031214-725345543-311518"
          }
        ]
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "400"
      }
    ]
  },
  "id": "SemanticModel"
}