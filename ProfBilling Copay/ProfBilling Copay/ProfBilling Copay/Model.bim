{
  "name": "SemanticModel",
  "compatibilityLevel": 1200,
  "model": {
    "culture": "en-US",
    "dataSources": [
      {
        "name": "Clarity",
        "connectionString": "Provider=SQLNCLI11;Data Source=clarityprodpri,60304;Initial Catalog=Clarity;Integrated Security=SSPI;Persist Security Info=false",
        "impersonationMode": "impersonateAccount",
        "account": "mdco\\epic777",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "SqlServer"
          }
        ]
      }
    ],
    "tables": [
      {
        "name": "Date - Contact",
        "columns": [
          {
            "name": "CALENDAR_DT",
            "dataType": "dateTime",
            "sourceColumn": "CALENDAR_DT",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "CALENDAR_DT_STR",
            "dataType": "string",
            "sourceColumn": "CALENDAR_DT_STR",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "YEAR_MONTH",
            "dataType": "string",
            "sourceColumn": "YEAR_MONTH",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "YEAR",
            "dataType": "int64",
            "sourceColumn": "YEAR",
            "sourceProviderType": "Integer"
          },
          {
            "name": "MONTH_NAME",
            "dataType": "string",
            "sourceColumn": "MONTH_NAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "MONTHNAME_YEAR",
            "dataType": "string",
            "sourceColumn": "MONTHNAME_YEAR",
            "sortByColumn": "YEAR_MONTH",
            "sourceProviderType": "VarChar"
          },
          {
            "type": "calculated",
            "name": "Market",
            "dataType": "int64",
            "isDataTypeInferred": true
          }
        ],
        "partitions": [
          {
            "name": "Date - Contact",
            "dataView": "full",
            "source": {
              "query": [
                "select ",
                " dd.CALENDAR_DT",
                ",dd.CALENDAR_DT_STR",
                ",dd.YEAR_MONTH",
                ",dd.YEAR",
                ",dd.MONTH_NAME",
                ",dd.MONTHNAME_YEAR",
                "",
                "from CLARITY.dbo.DATE_DIMENSION dd",
                "",
                "where dd.CALENDAR_DT >= '1/1/2017'",
                "and dd.CALENDAR_DT <= getdate()"
              ],
              "dataSource": "Clarity"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  " dd.CALENDAR_DT",
                  ",dd.CALENDAR_DT_STR",
                  ",dd.YEAR_MONTH",
                  ",dd.YEAR",
                  ",dd.MONTH_NAME",
                  ",dd.MONTHNAME_YEAR",
                  "",
                  "from CLARITY.dbo.DATE_DIMENSION dd",
                  "",
                  "where dd.CALENDAR_DT >= '1/1/2017'",
                  "and dd.CALENDAR_DT <= getdate()</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              " dd.CALENDAR_DT",
              ",dd.CALENDAR_DT_STR",
              ",dd.YEAR_MONTH",
              ",dd.YEAR",
              ",dd.MONTH_NAME",
              ",dd.MONTHNAME_YEAR",
              "",
              "from CLARITY.dbo.DATE_DIMENSION dd",
              "",
              "where dd.CALENDAR_DT >= '1/1/2017'",
              "and dd.CALENDAR_DT <= getdate()"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Date - Contact"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              " dd.CALENDAR_DT",
              ",dd.CALENDAR_DT_STR",
              ",dd.YEAR_MONTH",
              ",dd.YEAR",
              ",dd.MONTH_NAME",
              ",dd.MONTHNAME_YEAR",
              "",
              "from CLARITY.dbo.DATE_DIMENSION dd",
              "",
              "where dd.CALENDAR_DT >= '1/1/2017'",
              "and dd.CALENDAR_DT <= getdate()</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Encounters",
        "columns": [
          {
            "name": "Patient CSN",
            "dataType": "double",
            "sourceColumn": "Patient CSN",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "Contact Date",
            "dataType": "dateTime",
            "sourceColumn": "Contact Date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ENC TYPE ID",
            "dataType": "string",
            "sourceColumn": "ENC TYPE ID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ENC TYPE",
            "dataType": "string",
            "sourceColumn": "ENC TYPE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Department ID",
            "dataType": "double",
            "sourceColumn": "Department ID",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "Department",
            "dataType": "string",
            "sourceColumn": "Department",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Department Specialty",
            "dataType": "string",
            "sourceColumn": "Department Specialty",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Department GL",
            "dataType": "string",
            "sourceColumn": "Department GL",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Location ID",
            "dataType": "double",
            "sourceColumn": "Location ID",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "Location",
            "dataType": "string",
            "sourceColumn": "Location",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Location GL",
            "dataType": "string",
            "sourceColumn": "Location GL",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Region ID",
            "dataType": "string",
            "sourceColumn": "Region ID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Region",
            "dataType": "string",
            "sourceColumn": "Region",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Copay_Collected",
            "dataType": "double",
            "sourceColumn": "Copay Collected",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "First_Copay_Collected",
            "dataType": "int64",
            "sourceColumn": "First Copay Collected",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Copay_Due",
            "dataType": "double",
            "sourceColumn": "Copay Due",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "ENC Closed YN",
            "dataType": "string",
            "sourceColumn": "ENC Closed YN",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ENC Closed Date",
            "dataType": "dateTime",
            "sourceColumn": "ENC Closed Date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "Appt Status ID",
            "dataType": "int64",
            "sourceColumn": "Appt Status ID",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Appt Status",
            "dataType": "string",
            "sourceColumn": "Appt Status",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Visit Type ID",
            "dataType": "string",
            "sourceColumn": "Visit Type ID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Visit Type",
            "dataType": "string",
            "sourceColumn": "Visit Type",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Benefit Group",
            "dataType": "string",
            "sourceColumn": "Benefit Group",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Visit Provider ID",
            "dataType": "string",
            "sourceColumn": "Visit Provider ID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Visit Provider",
            "dataType": "string",
            "sourceColumn": "Visit Provider",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Vist Provider Type",
            "dataType": "string",
            "sourceColumn": "Vist Provider Type",
            "sourceProviderType": "VarChar"
          },
          {
            "type": "calculated",
            "name": "Market",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "SWITCH('Encounters'[Location ID]",
              ",11106,\"SPRINGFIELD\" ",
              "",
              ",11149,\"SPRINGFIELD\" ",
              "",
              ",11124,\"SPRINGFIELD\" ",
              "",
              ",19147,\"SPRINGFIELD\" ",
              "",
              ",18110,\"MRG\" ",
              "",
              ",19126,\"MRG\" ",
              "",
              ",18120,\"DEFIANCE\" ",
              "",
              ",18121,\"DEFIANCE\" ",
              "",
              ",19120,\"DEFIANCE\" ",
              "",
              ",19127,\"DEFIANCE\" ",
              "",
              ",19107,\"KENTUCKY - OTHER ENTITIES\" ",
              "",
              ",19108,\"KENTUCKY - OTHER ENTITIES\" ",
              "",
              ",19116,\"KENTUCKY - OTHER ENTITIES\" ",
              "",
              ",19118,\"KENTUCKY - OTHER ENTITIES\" ",
              "",
              ",'Encounters'[Region]",
              "",
              ") ",
              "",
              " "
            ]
          },
          {
            "type": "calculated",
            "name": "Revenue Cycle",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "SWITCH('Encounters'[Location ID]",
              "",
              ",11,   \"REV CYCLE\" ",
              ",11101,\"REV CYCLE\" ",
              ",11102,\"REV CYCLE\" ",
              ",11103,\"REV CYCLE\" ",
              ",11104,\"REV CYCLE\" ",
              ",11105,\"REV CYCLE\" ",
              ",11115,\"REV CYCLE\" ",
              ",11116,\"REV CYCLE\" ",
              ",11122,\"REV CYCLE\" ",
              ",11132,\"REV CYCLE\" ",
              ",11138,\"REV CYCLE\" ",
              ",11139,\"REV CYCLE\" ",
              ",11140,\"REV CYCLE\" ",
              ",11141,\"REV CYCLE\" ",
              ",11142,\"REV CYCLE\" ",
              ",11143,\"REV CYCLE\" ",
              ",11144,\"REV CYCLE\" ",
              ",11146,\"REV CYCLE\" ",
              ",11151,\"REV CYCLE\" ",
              ",19151,\"REV CYCLE\" ",
              ",19154,\"REV CYCLE\" ",
              ",19148,\"REV CYCLE\" ",
              ",19155,\"REV CYCLE\" ",
              ",19156,\"REV CYCLE\" ",
              ",19149,\"REV CYCLE\" ",
              ",19150,\"REV CYCLE\" ",
              ",19152,\"REV CYCLE\" ",
              ",19153,\"REV CYCLE\" ",
              "",
              ",11106,\"REV CYCLE\" ",
              ",11149,\"REV CYCLE\" ",
              ",11124,\"REV CYCLE\" ",
              ",19147,\"REV CYCLE\" ",
              "",
              ",13,   \"REV CYCLE\" ",
              ",13104,\"REV CYCLE\" ",
              ",13105,\"REV CYCLE\" ",
              ",13116,\"REV CYCLE\" ",
              ",19142,\"REV CYCLE\" ",
              ",19143,\"REV CYCLE\" ",
              ",19144,\"REV CYCLE\" ",
              ",19145,\"REV CYCLE\" ",
              "",
              ",16,   \"REV CYCLE\" ",
              ",16102,\"REV CYCLE\" ",
              ",16103,\"REV CYCLE\" ",
              ",16104,\"REV CYCLE\" ",
              ",19132,\"REV CYCLE\" ",
              ",19133,\"REV CYCLE\" ",
              ",19134,\"REV CYCLE\" ",
              "  ",
              ",17,   \"REV CYCLE\" ",
              ",17105,\"REV CYCLE\" ",
              ",17106,\"REV CYCLE\" ",
              ",17107,\"REV CYCLE\" ",
              ",17108,\"REV CYCLE\" ",
              ",17109,\"REV CYCLE\" ",
              ",17110,\"REV CYCLE\" ",
              ",17112,\"REV CYCLE\" ",
              ",17113,\"REV CYCLE\" ",
              ",19135,\"REV CYCLE\" ",
              ",19136,\"REV CYCLE\" ",
              ",19137,\"REV CYCLE\" ",
              ",19138,\"REV CYCLE\" ",
              ",19139,\"REV CYCLE\" ",
              ",19140,\"REV CYCLE\" ",
              ",19141,\"REV CYCLE\" ",
              "",
              ",18,   \"REV CYCLE\" ",
              ",18101,\"REV CYCLE\" ",
              ",18102,\"REV CYCLE\" ",
              ",18103,\"REV CYCLE\" ",
              ",18104,\"REV CYCLE\" ",
              ",18105,\"REV CYCLE\" ",
              ",18130,\"REV CYCLE\" ",
              ",18131,\"REV CYCLE\" ",
              ",18132,\"REV CYCLE\" ",
              ",18133,\"REV CYCLE\" ",
              ",19119,\"REV CYCLE\" ",
              ",19121,\"REV CYCLE\" ",
              ",19122,\"REV CYCLE\" ",
              ",19123,\"REV CYCLE\" ",
              ",19124,\"REV CYCLE\" ",
              ",19128,\"REV CYCLE\" ",
              ",19129,\"REV CYCLE\" ",
              ",19130,\"REV CYCLE\" ",
              ",19131,\"REV CYCLE\" ",
              ",18110,\"REV CYCLE\" ",
              ",19126,\"REV CYCLE\" ",
              ",18120,\"REV CYCLE\" ",
              ",18121,\"REV CYCLE\" ",
              ",19120,\"REV CYCLE\" ",
              ",19127,\"REV CYCLE\" ",
              "",
              ",19,   \"REV CYCLE\" ",
              ",19101,\"REV CYCLE\" ",
              ",19102,\"REV CYCLE\" ",
              ",19106,\"REV CYCLE\" ",
              ",19107,\"REV CYCLE\" ",
              ",19108,\"REV CYCLE\" ",
              ",19116,\"REV CYCLE\" ",
              ",19118,\"REV CYCLE\" ",
              "",
              ",\"OTHER\" ",
              "",
              ") "
            ]
          }
        ],
        "partitions": [
          {
            "name": "Copay",
            "dataView": "full",
            "source": {
              "query": [
                "select ",
                " enc.PAT_ENC_CSN_ID as 'Patient CSN'",
                ",enc.CONTACT_DATE as 'Contact Date'",
                ",enc.ENC_TYPE_C  as 'ENC TYPE ID'",
                ",disp.NAME as 'ENC TYPE'",
                ",enc.DEPARTMENT_ID as 'Department ID'",
                ",dep.DEPARTMENT_NAME as 'Department'",
                ",dep.SPECIALTY as 'Department Specialty'",
                ",dep.GL_PREFIX as 'Department GL'",
                ",loc.LOC_ID as 'Location ID'",
                ",loc.LOC_NAME as 'Location'",
                ",loc.GL_PREFIX as 'Location GL'",
                ",sa.RPT_GRP_TEN as 'Region ID'",
                ",upper(sa.NAME) as 'Region'",
                ",enc.COPAY_COLLECTED as 'Copay Collected'",
                ",copay.COLLECTED_AMT as 'First Copay Collected'",
                ",enc.COPAY_DUE as 'Copay Due'",
                ",enc.ENC_CLOSED_YN as 'ENC Closed YN'",
                ",enc.ENC_CLOSE_DATE as 'ENC Closed Date'",
                ",appt.APPT_STATUS_C as 'Appt Status ID'",
                ",appt.NAME as 'Appt Status'",
                ",prc.PRC_ID as 'Visit Type ID'",
                ",prc.PRC_NAME as 'Visit Type'",
                ",prc.BENEFIT_GROUP as 'Benefit Group'",
                ",ser_visit.PROV_ID as 'Visit Provider ID'",
                ",ser_visit.PROV_NAME as 'Visit Provider'",
                ",ser_visit.PROV_TYPE as 'Vist Provider Type'",
                "from PAT_ENC enc",
                "left join CLARITY_DEP dep on dep.DEPARTMENT_ID = enc.DEPARTMENT_ID",
                "left join CLARITY_LOC loc on loc.LOC_ID = dep.REV_LOC_ID",
                "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
                "left join CLARITY_SER ser_visit on ser_visit.PROV_ID = enc.VISIT_PROV_ID",
                "left join CLARITY_PRC prc on prc.PRC_ID = enc.APPT_PRC_ID",
                "left join ZC_APPT_STATUS appt on appt.APPT_STATUS_C = enc.APPT_STATUS_C",
                "left join ZC_DISP_ENC_TYPE disp on disp.DISP_ENC_TYPE_C = enc.ENC_TYPE_C",
                "left join PAT_ENC_ARPB_COPAY copay on copay.PAT_ENC_CSN_ID = enc.PAT_ENC_CSN_ID and copay.LINE = 1",
                "where enc.CONTACT_DATE >= '1/1/2017'",
                "and enc.CONTACT_DATE <= CONVERT(varchar,dateadd(d,-(day(getdate())),getdate()),101) ",
                "and enc.SERV_AREA_ID in (11,13,16,17,18,19)"
              ],
              "dataSource": "Clarity"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  " enc.PAT_ENC_CSN_ID as 'Patient CSN'",
                  ",enc.CONTACT_DATE as 'Contact Date'",
                  ",enc.ENC_TYPE_C  as 'ENC TYPE ID'",
                  ",disp.NAME as 'ENC TYPE'",
                  ",enc.DEPARTMENT_ID as 'Department ID'",
                  ",dep.DEPARTMENT_NAME as 'Department'",
                  ",dep.SPECIALTY as 'Department Specialty'",
                  ",dep.GL_PREFIX as 'Department GL'",
                  ",loc.LOC_ID as 'Location ID'",
                  ",loc.LOC_NAME as 'Location'",
                  ",loc.GL_PREFIX as 'Location GL'",
                  ",sa.RPT_GRP_TEN as 'Region ID'",
                  ",upper(sa.NAME) as 'Region'",
                  ",enc.COPAY_COLLECTED as 'Copay Collected'",
                  ",copay.COLLECTED_AMT as 'First Copay Collected'",
                  ",enc.COPAY_DUE as 'Copay Due'",
                  ",enc.ENC_CLOSED_YN as 'ENC Closed YN'",
                  ",enc.ENC_CLOSE_DATE as 'ENC Closed Date'",
                  ",appt.APPT_STATUS_C as 'Appt Status ID'",
                  ",appt.NAME as 'Appt Status'",
                  ",prc.PRC_ID as 'Visit Type ID'",
                  ",prc.PRC_NAME as 'Visit Type'",
                  ",prc.BENEFIT_GROUP as 'Benefit Group'",
                  ",ser_visit.PROV_ID as 'Visit Provider ID'",
                  ",ser_visit.PROV_NAME as 'Visit Provider'",
                  ",ser_visit.PROV_TYPE as 'Vist Provider Type'",
                  "from PAT_ENC enc",
                  "left join CLARITY_DEP dep on dep.DEPARTMENT_ID = enc.DEPARTMENT_ID",
                  "left join CLARITY_LOC loc on loc.LOC_ID = dep.REV_LOC_ID",
                  "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
                  "left join CLARITY_SER ser_visit on ser_visit.PROV_ID = enc.VISIT_PROV_ID",
                  "left join CLARITY_PRC prc on prc.PRC_ID = enc.APPT_PRC_ID",
                  "left join ZC_APPT_STATUS appt on appt.APPT_STATUS_C = enc.APPT_STATUS_C",
                  "left join ZC_DISP_ENC_TYPE disp on disp.DISP_ENC_TYPE_C = enc.ENC_TYPE_C",
                  "left join PAT_ENC_ARPB_COPAY copay on copay.PAT_ENC_CSN_ID = enc.PAT_ENC_CSN_ID and copay.LINE = 1",
                  "where enc.CONTACT_DATE >= '1/1/2017'",
                  "and enc.CONTACT_DATE <= CONVERT(varchar,dateadd(d,-(day(getdate())),getdate()),101) ",
                  "and enc.SERV_AREA_ID in (11,13,16,17,18,19)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Copay Collected",
            "expression": [
              "",
              "VAR Departments =",
              "    FILTER (",
              "        'Encounters',",
              "        'Encounters'[Department ID] <> 19290028",
              "            || 'Encounters'[Department ID] <> 19290022",
              "            || 'Encounters'[Department ID] <> 11101323",
              "            || 'Encounters'[Department ID] <> 11101447",
              "            || 'Encounters'[Department ID] <> 11101321",
              "            || 'Encounters'[Department ID] <> 11101501",
              "            || 'Encounters'[Department ID] <> 11101448",
              "            || 'Encounters'[Department ID] <> 11101322",
              "            || 'Encounters'[Department ID] <> 11106145",
              "            || 'Encounters'[Department ID] <> 11106141",
              "            || 'Encounters'[Department ID] <> 18101244",
              "            || 'Encounters'[Department ID]<> 19390123",
              "    )",
              "VAR AppointmentType =",
              "    FILTER (",
              "        'Encounters',",
              "        'Encounters'[Appt Status ID] = 2",
              "            || 'Encounters'[Appt Status ID] = 6",
              "    )",
              "VAR VisitType =",
              "    FILTER (",
              "        'Encounters',",
              "        'Encounters'[Benefit Group] = \"Office Visit\"",
              "            || 'Encounters'[Benefit Group] = \"Copay\"",
              "            || 'Encounters'[Benefit Group] = \"PB Copay\"",
              "    )",
              "RETURN",
              "    CALCULATE (SUM('Encounters'[Copay_Collected]), Departments, AppointmentType, VisitType)"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Copay",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "First Copay Collected",
            "expression": [
              "",
              "",
              "VAR Departments =",
              "    FILTER (",
              "        'Encounters',",
              "        'Encounters'[Department ID] <> 19290028",
              "            || 'Encounters'[Department ID] <> 19290022",
              "            || 'Encounters'[Department ID] <> 11101323",
              "            || 'Encounters'[Department ID] <> 11101447",
              "            || 'Encounters'[Department ID] <> 11101321",
              "            || 'Encounters'[Department ID] <> 11101501",
              "            || 'Encounters'[Department ID] <> 11101448",
              "            || 'Encounters'[Department ID] <> 11101322",
              "            || 'Encounters'[Department ID] <> 11106145",
              "            || 'Encounters'[Department ID] <> 11106141",
              "            || 'Encounters'[Department ID] <> 18101244",
              "            || 'Encounters'[Department ID]<> 19390123",
              "    )",
              "VAR AppointmentType =",
              "    FILTER (",
              "        'Encounters',",
              "        'Encounters'[Appt Status ID] = 2",
              "            || 'Encounters'[Appt Status ID] = 6",
              "    )",
              "VAR VisitType =",
              "    FILTER (",
              "        'Encounters',",
              "        'Encounters'[Benefit Group] = \"Office Visit\"",
              "            || 'Encounters'[Benefit Group] = \"Copay\"",
              "            || 'Encounters'[Benefit Group] = \"PB Copay\"",
              "    )",
              "RETURN",
              "    CALCULATE (SUM('Encounters'[First_Copay_Collected]), Departments, AppointmentType, VisitType)"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Copay",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Copay Due",
            "expression": [
              "",
              "VAR Departments =",
              "    FILTER (",
              "        'Encounters',",
              "        'Encounters'[Department ID] <> 19290028",
              "            || 'Encounters'[Department ID] <> 19290022",
              "            || 'Encounters'[Department ID] <> 11101323",
              "            || 'Encounters'[Department ID] <> 11101447",
              "            || 'Encounters'[Department ID] <> 11101321",
              "            || 'Encounters'[Department ID] <> 11101501",
              "            || 'Encounters'[Department ID] <> 11101448",
              "            || 'Encounters'[Department ID] <> 11101322",
              "            || 'Encounters'[Department ID] <> 11106145",
              "            || 'Encounters'[Department ID] <> 11106141",
              "            || 'Encounters'[Department ID] <> 18101244",
              "            || 'Encounters'[Department ID]<> 19390123",
              "    )",
              "VAR AppointmentType =",
              "    FILTER (",
              "        'Encounters',",
              "        'Encounters'[Appt Status ID] = 2",
              "            || 'Encounters'[Appt Status ID] = 6",
              "    )",
              "VAR VisitType =",
              "    FILTER (",
              "        'Encounters',",
              "        'Encounters'[Benefit Group] = \"Office Visit\"",
              "            || 'Encounters'[Benefit Group] = \"Copay\"",
              "            || 'Encounters'[Benefit Group] = \"PB Copay\"",
              "    )",
              "RETURN",
              "    CALCULATE (SUM('Encounters'[Copay_Due]), Departments, AppointmentType, VisitType)"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Copay",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Copay Collected %",
            "expression": "'Encounters'[Copay Collected]/Encounters[Copay Due]",
            "formatString": "0.00 %;-0.00 %;0.00 %",
            "displayFolder": "Copay"
          },
          {
            "name": "First Copay Collected %",
            "expression": "'Encounters'[First Copay Collected]/Encounters[Copay Due]",
            "formatString": "0.00 %;-0.00 %;0.00 %",
            "displayFolder": "Copay"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              " enc.PAT_ENC_CSN_ID as 'Patient CSN'",
              ",enc.CONTACT_DATE as 'Contact Date'",
              ",enc.ENC_TYPE_C  as 'ENC TYPE ID'",
              ",disp.NAME as 'ENC TYPE'",
              ",enc.DEPARTMENT_ID as 'Department ID'",
              ",dep.DEPARTMENT_NAME as 'Department'",
              ",dep.SPECIALTY as 'Department Specialty'",
              ",dep.GL_PREFIX as 'Department GL'",
              ",loc.LOC_ID as 'Location ID'",
              ",loc.LOC_NAME as 'Location'",
              ",loc.GL_PREFIX as 'Location GL'",
              ",sa.RPT_GRP_TEN as 'Region ID'",
              ",upper(sa.NAME) as 'Region'",
              ",enc.COPAY_COLLECTED as 'Copay Collected'",
              ",copay.COLLECTED_AMT as 'First Copay Collected'",
              ",enc.COPAY_DUE as 'Copay Due'",
              ",enc.ENC_CLOSED_YN as 'ENC Closed YN'",
              ",enc.ENC_CLOSE_DATE as 'ENC Closed Date'",
              ",appt.APPT_STATUS_C as 'Appt Status ID'",
              ",appt.NAME as 'Appt Status'",
              ",prc.PRC_ID as 'Visit Type ID'",
              ",prc.PRC_NAME as 'Visit Type'",
              ",prc.BENEFIT_GROUP as 'Benefit Group'",
              ",ser_visit.PROV_ID as 'Visit Provider ID'",
              ",ser_visit.PROV_NAME as 'Visit Provider'",
              ",ser_visit.PROV_TYPE as 'Vist Provider Type'",
              "from PAT_ENC enc",
              "left join CLARITY_DEP dep on dep.DEPARTMENT_ID = enc.DEPARTMENT_ID",
              "left join CLARITY_LOC loc on loc.LOC_ID = dep.REV_LOC_ID",
              "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
              "left join CLARITY_SER ser_visit on ser_visit.PROV_ID = enc.VISIT_PROV_ID",
              "left join CLARITY_PRC prc on prc.PRC_ID = enc.APPT_PRC_ID",
              "left join ZC_APPT_STATUS appt on appt.APPT_STATUS_C = enc.APPT_STATUS_C",
              "left join ZC_DISP_ENC_TYPE disp on disp.DISP_ENC_TYPE_C = enc.ENC_TYPE_C",
              "left join PAT_ENC_ARPB_COPAY copay on copay.PAT_ENC_CSN_ID = enc.PAT_ENC_CSN_ID and copay.LINE = 1",
              "where enc.CONTACT_DATE >= '1/1/2017'",
              "and enc.CONTACT_DATE <= CONVERT(varchar,dateadd(d,-(day(getdate())),getdate()),101) ",
              "and enc.SERV_AREA_ID in (11,13,16,17,18,19)"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Copay"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              " enc.PAT_ENC_CSN_ID as 'Patient CSN'",
              ",enc.CONTACT_DATE as 'Contact Date'",
              ",enc.ENC_TYPE_C  as 'ENC TYPE ID'",
              ",disp.NAME as 'ENC TYPE'",
              ",enc.DEPARTMENT_ID as 'Department ID'",
              ",dep.DEPARTMENT_NAME as 'Department'",
              ",dep.SPECIALTY as 'Department Specialty'",
              ",dep.GL_PREFIX as 'Department GL'",
              ",loc.LOC_ID as 'Location ID'",
              ",loc.LOC_NAME as 'Location'",
              ",loc.GL_PREFIX as 'Location GL'",
              ",sa.RPT_GRP_TEN as 'Region ID'",
              ",upper(sa.NAME) as 'Region'",
              ",enc.COPAY_COLLECTED as 'Copay Collected'",
              ",copay.COLLECTED_AMT as 'First Copay Collected'",
              ",enc.COPAY_DUE as 'Copay Due'",
              ",enc.ENC_CLOSED_YN as 'ENC Closed YN'",
              ",enc.ENC_CLOSE_DATE as 'ENC Closed Date'",
              ",appt.APPT_STATUS_C as 'Appt Status ID'",
              ",appt.NAME as 'Appt Status'",
              ",prc.PRC_ID as 'Visit Type ID'",
              ",prc.PRC_NAME as 'Visit Type'",
              ",prc.BENEFIT_GROUP as 'Benefit Group'",
              ",ser_visit.PROV_ID as 'Visit Provider ID'",
              ",ser_visit.PROV_NAME as 'Visit Provider'",
              ",ser_visit.PROV_TYPE as 'Vist Provider Type'",
              "from PAT_ENC enc",
              "left join CLARITY_DEP dep on dep.DEPARTMENT_ID = enc.DEPARTMENT_ID",
              "left join CLARITY_LOC loc on loc.LOC_ID = dep.REV_LOC_ID",
              "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
              "left join CLARITY_SER ser_visit on ser_visit.PROV_ID = enc.VISIT_PROV_ID",
              "left join CLARITY_PRC prc on prc.PRC_ID = enc.APPT_PRC_ID",
              "left join ZC_APPT_STATUS appt on appt.APPT_STATUS_C = enc.APPT_STATUS_C",
              "left join ZC_DISP_ENC_TYPE disp on disp.DISP_ENC_TYPE_C = enc.ENC_TYPE_C",
              "left join PAT_ENC_ARPB_COPAY copay on copay.PAT_ENC_CSN_ID = enc.PAT_ENC_CSN_ID and copay.LINE = 1",
              "where enc.CONTACT_DATE >= '1/1/2017'",
              "and enc.CONTACT_DATE <= CONVERT(varchar,dateadd(d,-(day(getdate())),getdate()),101) ",
              "and enc.SERV_AREA_ID in (11,13,16,17,18,19)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "df46f079-a79a-4c9c-86ca-82dfed439774",
        "fromTable": "Encounters",
        "fromColumn": "Contact Date",
        "toTable": "Date - Contact",
        "toColumn": "CALENDAR_DT"
      }
    ],
    "roles": [
      {
        "name": "Role",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "MDCO\\Corp-EPIC_Clarity_PBUsers",
            "memberId": "S-1-5-21-448539723-1085031214-725345543-311518"
          },
          {
            "memberName": "MDCO\\Corp-EPIC_Clarity_Reporting_Group",
            "memberId": "S-1-5-21-448539723-1085031214-725345543-141188"
          }
        ]
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "400"
      }
    ]
  },
  "id": "SemanticModel"
}