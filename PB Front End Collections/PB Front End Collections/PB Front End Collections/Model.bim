{
  "name": "SemanticModel",
  "compatibilityLevel": 1200,
  "model": {
    "culture": "en-US",
    "dataSources": [
      {
        "name": "Clarity",
        "connectionString": "Provider=SQLNCLI11;Data Source=clarityprodpri,60304;Initial Catalog=Clarity;Integrated Security=SSPI;Persist Security Info=false",
        "impersonationMode": "impersonateAccount",
        "account": "mdco\\epic777",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "SqlServer"
          }
        ]
      }
    ],
    "tables": [
      {
        "name": "Front End Collections",
        "columns": [
          {
            "name": "ACCOUNT_ID",
            "dataType": "double",
            "sourceColumn": "ACCOUNT_ID",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "PAT_ENC_CSN_ID",
            "dataType": "double",
            "sourceColumn": "PAT_ENC_CSN_ID",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "SPECIALTY",
            "dataType": "string",
            "sourceColumn": "SPECIALTY",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "COPAY_COLLECTED",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "COPAY_COLLECTED",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "sourceProviderType": "Decimal",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "COPAY_DUE",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "COPAY_DUE",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "sourceProviderType": "Decimal",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "PATIENT_PAYMENT",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "PATIENT_PAYMENT",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "sourceProviderType": "Decimal",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "PB_BALANCE",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "PB_BALANCE",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "sourceProviderType": "Decimal",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "HB_BALANCE",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "HB_BALANCE",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "sourceProviderType": "Decimal",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "LOC_ID",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "LOC_ID"
          },
          {
            "type": "calculated",
            "name": "MARKET",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "SWITCH('Front End Collections'[LOC_ID]",
              ",11106,\"SPRINGFIELD\"",
              ",11149,\"SPRINGFIELD\"",
              ",11124,\"SPRINGFIELD\"",
              ",18110,\"MRG\"",
              ",19126,\"MRG\"",
              ",18120,\"DEFIANCE\"",
              ",18121,\"DEFIANCE\"",
              ",19120,\"DEFIANCE\"",
              ",19127,\"DEFIANCE\"",
              ",19107,\"KENTUCKY - OTHER ENTITIES\"",
              ",19108,\"KENTUCKY - OTHER ENTITIES\"",
              ",19116,\"KENTUCKY - OTHER ENTITIES\"",
              ",19118,\"KENTUCKY - OTHER ENTITIES\"",
              ",'Front End Collections'[REGION]",
              ")",
              ""
            ]
          },
          {
            "name": "REGION",
            "dataType": "string",
            "sourceColumn": "REGION"
          },
          {
            "name": "APPT STATUS",
            "dataType": "string",
            "sourceColumn": "APPT_STATUS",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ENC TYPE",
            "dataType": "string",
            "sourceColumn": "ENC_TYPE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DEPARTMENT",
            "dataType": "string",
            "sourceColumn": "DEPARTMENT_NAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "MONTH-YEAR",
            "dataType": "string",
            "sourceColumn": "MONTHNAME_YEAR",
            "sortByColumn": "YEAR_MONTH"
          },
          {
            "name": "YEAR_MONTH",
            "dataType": "string",
            "sourceColumn": "YEAR_MONTH"
          },
          {
            "name": "CONTACT DATE",
            "dataType": "dateTime",
            "sourceColumn": "CONTACT_DATE",
            "formatString": "Short Date",
            "sourceProviderType": "Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Front End Collections",
            "dataView": "full",
            "source": {
              "query": [
                "declare @startdate date  = '8/15/2018' ",
                "\t\t,@enddate date = dateadd(d,0,datediff(d,0,getdate())-1); ---yesterday",
                "",
                "",
                "with CteCopay as",
                "(",
                "select",
                " ACCOUNT_ID",
                ",PAT_ENC_CSN_ID",
                ",MONTHNAME_YEAR",
                ",YEAR_MONTH",
                ",cast(CONTACT_DATE as date) as CONTACT_DATE",
                ",CHECKIN_TIME",
                ",APPT_STATUS",
                ",ENC_TYPE",
                ",REGION",
                ",LOC_ID",
                ",DEPARTMENT_NAME",
                ",SPECIALTY",
                ",COPAY_COLLECTED",
                ",COPAY_DUE",
                ",case when ROW# = 1 then coalesce(PB_BALANCE,0) else 0 end as PB_BALANCE",
                ",case when ROW# = 1 then coalesce(HB_BALANCE,0) else 0 end as HB_BALANCE",
                "",
                "from",
                "",
                "(",
                "select ",
                " enc.ACCOUNT_ID",
                ",enc.PAT_ENC_CSN_ID",
                ",date.YEAR_MONTH",
                ",date.MONTHNAME_YEAR",
                ",enc.CONTACT_DATE",
                ",enc.CHECKIN_TIME",
                ",appt_status.NAME as APPT_STATUS",
                ",enc_type.NAME as ENC_TYPE",
                ",upper(sa.NAME) as REGION",
                ",loc.LOC_ID",
                ",dep.DEPARTMENT_NAME",
                ",dep.SPECIALTY",
                ",case when zbg.name in ('Office Visit','PB Copay','Copay') then enc.COPAY_COLLECTED else 0 end as COPAY_COLLECTED",
                ",case when zbg.name in ('Office Visit','PB Copay','Copay') then enc.COPAY_DUE else 0 end as COPAY_DUE",
                ",case when PATIENT_BALANCE < 0 then 0 else PATIENT_BALANCE end as PB_BALANCE",
                ",case when HB_SELFPAY_BALANCE < 0 then 0 else HB_SELFPAY_BALANCE end as HB_BALANCE",
                ",ROW_NUMBER() OVER(PARTITION BY enc.ACCOUNT_ID, enc.CONTACT_DATE ORDER BY enc.PAT_ENC_CSN_ID ASC) as ROW#",
                "",
                "from PAT_ENC enc",
                "left join CLARITY_DEP dep on enc.DEPARTMENT_ID= dep.DEPARTMENT_ID ",
                "left join CLARITY_LOC loc on loc.LOC_ID = dep.REV_LOC_ID",
                "left join ClarityCHPUtil.rpt.PB_DAILY_ACCOUNT_PATIENT_BALANCE bal on bal.ACCOUNT_ID = enc.ACCOUNT_ID and bal.UPDATE_DATE = enc.CONTACT_DATE and PATIENT_BALANCE > 0",
                "left join ZC_DISP_ENC_TYPE enc_type on enc_type.DISP_ENC_TYPE_C = enc.ENC_TYPE_C",
                "left join ZC_APPT_STATUS appt_status on appt_status.APPT_STATUS_C = enc.APPT_STATUS_C",
                "left join CLARITY_PRC prc on prc.PRC_ID = enc.APPT_PRC_ID",
                "left join CLARITY_PRC_2 prc2 on prc2.PRC_ID = prc.PRC_ID",
                "left join ZC_BENEFIT_GROUP zbg on zbg.BENEFIT_GROUP_C = prc2.BENEFIT_GROUP_C",
                "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
                "left join DATE_DIMENSION date on date.CALENDAR_DT = enc.CONTACT_DATE",
                "",
                "where ",
                "enc.APPT_STATUS_C in (2,6) -- ARRIVED OR COMPLETED",
                "and enc.CANCEL_REASON_C is null ",
                "and enc.CONTACT_DATE between @startdate and @enddate",
                "and loc.RPT_GRP_TEN in (11,13,16,17,18,19)",
                "and enc.ACCOUNT_ID is not null",
                "and enc_type.NAME not in ('Hospital encounter','Community Outreach','Scheduled Telephone Encounter','Erroneous Encounter')",
                "--and enc.PAT_ENC_CSN_ID in (180128007,180209008,180209381,168099850,100500018)-- TEST DATE",
                "--and enc.ACCOUNT_ID = 1493493",
                "",
                ")a",
                "),",
                "",
                "CtePayment as",
                "(",
                "select",
                " arpb_tx.ACCOUNT_ID",
                ",cast(arpb_tx.SERVICE_DATE as date) as SERVICE_DATE",
                ",sum(arpb_tx.AMOUNT)*-1 as PATIENT_PAYMENT",
                "from ARPB_TRANSACTIONS arpb_tx",
                "where arpb_tx.TX_TYPE_C = 2",
                "and arpb_tx.PROC_ID = 7084",
                "and arpb_tx.SERVICE_AREA_ID in (11,13,16,17,18,19)",
                "group by",
                " arpb_tx.ACCOUNT_ID",
                ",arpb_tx.SERVICE_DATE",
                ")",
                "",
                "select",
                " a.ACCOUNT_ID",
                ",a.PAT_ENC_CSN_ID",
                ",a.MONTHNAME_YEAR",
                ",a.YEAR_MONTH",
                ",a.CONTACT_DATE",
                ",a.APPT_STATUS",
                ",a.ENC_TYPE",
                ",a.REGION",
                ",a.LOC_ID",
                ",a.DEPARTMENT_NAME",
                ",a.SPECIALTY",
                ",a.COPAY_COLLECTED",
                ",a.COPAY_DUE",
                ",case when a.ROW# = 1 then coalesce(PATIENT_PAYMENT,0) else 0 end as PATIENT_PAYMENT",
                ",a.PB_BALANCE",
                ",a.HB_BALANCE",
                "from",
                "(",
                "select copay.*",
                ",pay.PATIENT_PAYMENT",
                ",ROW_NUMBER() OVER(PARTITION BY copay.ACCOUNT_ID, copay.CONTACT_DATE ORDER BY copay.PAT_ENC_CSN_ID ASC) as ROW#",
                "from CteCopay copay",
                "left join CtePayment pay on pay.ACCOUNT_ID = copay.ACCOUNT_ID and pay.SERVICE_DATE = copay.CONTACT_DATE",
                "",
                ")a"
              ],
              "dataSource": "Clarity"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>declare @startdate date  = '8/15/2018' ",
                  "\t\t,@enddate date = dateadd(d,0,datediff(d,0,getdate())-1); ---yesterday",
                  "",
                  "",
                  "with CteCopay as",
                  "(",
                  "select",
                  " ACCOUNT_ID",
                  ",PAT_ENC_CSN_ID",
                  ",MONTHNAME_YEAR",
                  ",YEAR_MONTH",
                  ",cast(CONTACT_DATE as date) as CONTACT_DATE",
                  ",CHECKIN_TIME",
                  ",APPT_STATUS",
                  ",ENC_TYPE",
                  ",REGION",
                  ",LOC_ID",
                  ",DEPARTMENT_NAME",
                  ",SPECIALTY",
                  ",COPAY_COLLECTED",
                  ",COPAY_DUE",
                  ",case when ROW# = 1 then coalesce(PB_BALANCE,0) else 0 end as PB_BALANCE",
                  ",case when ROW# = 1 then coalesce(HB_BALANCE,0) else 0 end as HB_BALANCE",
                  "",
                  "from",
                  "",
                  "(",
                  "select ",
                  " enc.ACCOUNT_ID",
                  ",enc.PAT_ENC_CSN_ID",
                  ",date.YEAR_MONTH",
                  ",date.MONTHNAME_YEAR",
                  ",enc.CONTACT_DATE",
                  ",enc.CHECKIN_TIME",
                  ",appt_status.NAME as APPT_STATUS",
                  ",enc_type.NAME as ENC_TYPE",
                  ",upper(sa.NAME) as REGION",
                  ",loc.LOC_ID",
                  ",dep.DEPARTMENT_NAME",
                  ",dep.SPECIALTY",
                  ",case when zbg.name in ('Office Visit','PB Copay','Copay') then enc.COPAY_COLLECTED else 0 end as COPAY_COLLECTED",
                  ",case when zbg.name in ('Office Visit','PB Copay','Copay') then enc.COPAY_DUE else 0 end as COPAY_DUE",
                  ",case when PATIENT_BALANCE < 0 then 0 else PATIENT_BALANCE end as PB_BALANCE",
                  ",case when HB_SELFPAY_BALANCE < 0 then 0 else HB_SELFPAY_BALANCE end as HB_BALANCE",
                  ",ROW_NUMBER() OVER(PARTITION BY enc.ACCOUNT_ID, enc.CONTACT_DATE ORDER BY enc.PAT_ENC_CSN_ID ASC) as ROW#",
                  "",
                  "from PAT_ENC enc",
                  "left join CLARITY_DEP dep on enc.DEPARTMENT_ID= dep.DEPARTMENT_ID ",
                  "left join CLARITY_LOC loc on loc.LOC_ID = dep.REV_LOC_ID",
                  "left join ClarityCHPUtil.rpt.PB_DAILY_ACCOUNT_PATIENT_BALANCE bal on bal.ACCOUNT_ID = enc.ACCOUNT_ID and bal.UPDATE_DATE = enc.CONTACT_DATE and PATIENT_BALANCE > 0",
                  "left join ZC_DISP_ENC_TYPE enc_type on enc_type.DISP_ENC_TYPE_C = enc.ENC_TYPE_C",
                  "left join ZC_APPT_STATUS appt_status on appt_status.APPT_STATUS_C = enc.APPT_STATUS_C",
                  "left join CLARITY_PRC prc on prc.PRC_ID = enc.APPT_PRC_ID",
                  "left join CLARITY_PRC_2 prc2 on prc2.PRC_ID = prc.PRC_ID",
                  "left join ZC_BENEFIT_GROUP zbg on zbg.BENEFIT_GROUP_C = prc2.BENEFIT_GROUP_C",
                  "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
                  "left join DATE_DIMENSION date on date.CALENDAR_DT = enc.CONTACT_DATE",
                  "",
                  "where ",
                  "enc.APPT_STATUS_C in (2,6) -- ARRIVED OR COMPLETED",
                  "and enc.CANCEL_REASON_C is null ",
                  "and enc.CONTACT_DATE between @startdate and @enddate",
                  "and loc.RPT_GRP_TEN in (11,13,16,17,18,19)",
                  "and enc.ACCOUNT_ID is not null",
                  "and enc_type.NAME not in ('Hospital encounter','Community Outreach','Scheduled Telephone Encounter','Erroneous Encounter')",
                  "--and enc.PAT_ENC_CSN_ID in (180128007,180209008,180209381,168099850,100500018)-- TEST DATE",
                  "--and enc.ACCOUNT_ID = 1493493",
                  "",
                  ")a",
                  "),",
                  "",
                  "CtePayment as",
                  "(",
                  "select",
                  " arpb_tx.ACCOUNT_ID",
                  ",cast(arpb_tx.SERVICE_DATE as date) as SERVICE_DATE",
                  ",sum(arpb_tx.AMOUNT)*-1 as PATIENT_PAYMENT",
                  "from ARPB_TRANSACTIONS arpb_tx",
                  "where arpb_tx.TX_TYPE_C = 2",
                  "and arpb_tx.PROC_ID = 7084",
                  "and arpb_tx.SERVICE_AREA_ID in (11,13,16,17,18,19)",
                  "group by",
                  " arpb_tx.ACCOUNT_ID",
                  ",arpb_tx.SERVICE_DATE",
                  ")",
                  "",
                  "select",
                  " a.ACCOUNT_ID",
                  ",a.PAT_ENC_CSN_ID",
                  ",a.MONTHNAME_YEAR",
                  ",a.YEAR_MONTH",
                  ",a.CONTACT_DATE",
                  ",a.APPT_STATUS",
                  ",a.ENC_TYPE",
                  ",a.REGION",
                  ",a.LOC_ID",
                  ",a.DEPARTMENT_NAME",
                  ",a.SPECIALTY",
                  ",a.COPAY_COLLECTED",
                  ",a.COPAY_DUE",
                  ",case when a.ROW# = 1 then coalesce(PATIENT_PAYMENT,0) else 0 end as PATIENT_PAYMENT",
                  ",a.PB_BALANCE",
                  ",a.HB_BALANCE",
                  "from",
                  "(",
                  "select copay.*",
                  ",pay.PATIENT_PAYMENT",
                  ",ROW_NUMBER() OVER(PARTITION BY copay.ACCOUNT_ID, copay.CONTACT_DATE ORDER BY copay.PAT_ENC_CSN_ID ASC) as ROW#",
                  "from CteCopay copay",
                  "left join CtePayment pay on pay.ACCOUNT_ID = copay.ACCOUNT_ID and pay.SERVICE_DATE = copay.CONTACT_DATE",
                  "",
                  ")a</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "COPAY COLLECTED",
            "expression": "sum('Front End Collections'[COPAY_COLLECTED])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "COPAY DUE",
            "expression": "sum('Front End Collections'[COPAY_DUE])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "PB BALANCE",
            "expression": "sum('Front End Collections'[PB_BALANCE])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "COPAY RATE",
            "expression": "IFERROR([COPAY COLLECTED]/[COPAY DUE],0)",
            "formatString": "0.00 %;-0.00 %;0.00 %"
          },
          {
            "name": "TOTAL RATE",
            "expression": "IFERROR(([COPAY COLLECTED] + [OTHER PAYMENTS])/([COPAY DUE]+[PB BALANCE]),0)",
            "formatString": "0.00 %;-0.00 %;0.00 %"
          },
          {
            "name": "OTHER PAYMENTS",
            "expression": "sum('Front End Collections'[PATIENT_PAYMENT])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "OTHER PAYMENT RATE",
            "expression": "IFERROR([OTHER PAYMENTS]/[PB BALANCE],0)",
            "formatString": "0.00 %;-0.00 %;0.00 %"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "declare @startdate date  = '8/15/2018' ",
              "\t\t,@enddate date = dateadd(d,0,datediff(d,0,getdate())-1); ---yesterday",
              "",
              "",
              "with CteCopay as",
              "(",
              "select",
              " ACCOUNT_ID",
              ",PAT_ENC_CSN_ID",
              ",MONTHNAME_YEAR",
              ",YEAR_MONTH",
              ",cast(CONTACT_DATE as date) as CONTACT_DATE",
              ",CHECKIN_TIME",
              ",APPT_STATUS",
              ",ENC_TYPE",
              ",REGION",
              ",LOC_ID",
              ",DEPARTMENT_NAME",
              ",SPECIALTY",
              ",COPAY_COLLECTED",
              ",COPAY_DUE",
              ",case when ROW# = 1 then coalesce(PB_BALANCE,0) else 0 end as PB_BALANCE",
              ",case when ROW# = 1 then coalesce(HB_BALANCE,0) else 0 end as HB_BALANCE",
              "",
              "from",
              "",
              "(",
              "select ",
              " enc.ACCOUNT_ID",
              ",enc.PAT_ENC_CSN_ID",
              ",date.YEAR_MONTH",
              ",date.MONTHNAME_YEAR",
              ",enc.CONTACT_DATE",
              ",enc.CHECKIN_TIME",
              ",appt_status.NAME as APPT_STATUS",
              ",enc_type.NAME as ENC_TYPE",
              ",upper(sa.NAME) as REGION",
              ",loc.LOC_ID",
              ",dep.DEPARTMENT_NAME",
              ",dep.SPECIALTY",
              ",case when zbg.name in ('Office Visit','PB Copay','Copay') then enc.COPAY_COLLECTED else 0 end as COPAY_COLLECTED",
              ",case when zbg.name in ('Office Visit','PB Copay','Copay') then enc.COPAY_DUE else 0 end as COPAY_DUE",
              ",case when PATIENT_BALANCE < 0 then 0 else PATIENT_BALANCE end as PB_BALANCE",
              ",case when HB_SELFPAY_BALANCE < 0 then 0 else HB_SELFPAY_BALANCE end as HB_BALANCE",
              ",ROW_NUMBER() OVER(PARTITION BY enc.ACCOUNT_ID, enc.CONTACT_DATE ORDER BY enc.PAT_ENC_CSN_ID ASC) as ROW#",
              "",
              "from PAT_ENC enc",
              "left join CLARITY_DEP dep on enc.DEPARTMENT_ID= dep.DEPARTMENT_ID ",
              "left join CLARITY_LOC loc on loc.LOC_ID = dep.REV_LOC_ID",
              "left join ClarityCHPUtil.rpt.PB_DAILY_ACCOUNT_PATIENT_BALANCE bal on bal.ACCOUNT_ID = enc.ACCOUNT_ID and bal.UPDATE_DATE = enc.CONTACT_DATE and PATIENT_BALANCE > 0",
              "left join ZC_DISP_ENC_TYPE enc_type on enc_type.DISP_ENC_TYPE_C = enc.ENC_TYPE_C",
              "left join ZC_APPT_STATUS appt_status on appt_status.APPT_STATUS_C = enc.APPT_STATUS_C",
              "left join CLARITY_PRC prc on prc.PRC_ID = enc.APPT_PRC_ID",
              "left join CLARITY_PRC_2 prc2 on prc2.PRC_ID = prc.PRC_ID",
              "left join ZC_BENEFIT_GROUP zbg on zbg.BENEFIT_GROUP_C = prc2.BENEFIT_GROUP_C",
              "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
              "left join DATE_DIMENSION date on date.CALENDAR_DT = enc.CONTACT_DATE",
              "",
              "where ",
              "enc.APPT_STATUS_C in (2,6) -- ARRIVED OR COMPLETED",
              "and enc.CANCEL_REASON_C is null ",
              "and enc.CONTACT_DATE between @startdate and @enddate",
              "and loc.RPT_GRP_TEN in (11,13,16,17,18,19)",
              "and enc.ACCOUNT_ID is not null",
              "and enc_type.NAME not in ('Hospital encounter','Community Outreach','Scheduled Telephone Encounter','Erroneous Encounter')",
              "--and enc.PAT_ENC_CSN_ID in (180128007,180209008,180209381,168099850,100500018)-- TEST DATE",
              "--and enc.ACCOUNT_ID = 1493493",
              "",
              ")a",
              "),",
              "",
              "CtePayment as",
              "(",
              "select",
              " arpb_tx.ACCOUNT_ID",
              ",cast(arpb_tx.SERVICE_DATE as date) as SERVICE_DATE",
              ",sum(arpb_tx.AMOUNT)*-1 as PATIENT_PAYMENT",
              "from ARPB_TRANSACTIONS arpb_tx",
              "where arpb_tx.TX_TYPE_C = 2",
              "and arpb_tx.PROC_ID = 7084",
              "and arpb_tx.SERVICE_AREA_ID in (11,13,16,17,18,19)",
              "group by",
              " arpb_tx.ACCOUNT_ID",
              ",arpb_tx.SERVICE_DATE",
              ")",
              "",
              "select",
              " a.ACCOUNT_ID",
              ",a.PAT_ENC_CSN_ID",
              ",a.MONTHNAME_YEAR",
              ",a.YEAR_MONTH",
              ",a.CONTACT_DATE",
              ",a.APPT_STATUS",
              ",a.ENC_TYPE",
              ",a.REGION",
              ",a.LOC_ID",
              ",a.DEPARTMENT_NAME",
              ",a.SPECIALTY",
              ",a.COPAY_COLLECTED",
              ",a.COPAY_DUE",
              ",case when a.ROW# = 1 then coalesce(PATIENT_PAYMENT,0) else 0 end as PATIENT_PAYMENT",
              ",a.PB_BALANCE",
              ",a.HB_BALANCE",
              "from",
              "(",
              "select copay.*",
              ",pay.PATIENT_PAYMENT",
              ",ROW_NUMBER() OVER(PARTITION BY copay.ACCOUNT_ID, copay.CONTACT_DATE ORDER BY copay.PAT_ENC_CSN_ID ASC) as ROW#",
              "from CteCopay copay",
              "left join CtePayment pay on pay.ACCOUNT_ID = copay.ACCOUNT_ID and pay.SERVICE_DATE = copay.CONTACT_DATE",
              "",
              ")a"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Front End Collections"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>declare @startdate date  = '8/15/2018' ",
              "\t\t,@enddate date = dateadd(d,0,datediff(d,0,getdate())-1); ---yesterday",
              "",
              "",
              "with CteCopay as",
              "(",
              "select",
              " ACCOUNT_ID",
              ",PAT_ENC_CSN_ID",
              ",MONTHNAME_YEAR",
              ",YEAR_MONTH",
              ",cast(CONTACT_DATE as date) as CONTACT_DATE",
              ",CHECKIN_TIME",
              ",APPT_STATUS",
              ",ENC_TYPE",
              ",REGION",
              ",LOC_ID",
              ",DEPARTMENT_NAME",
              ",SPECIALTY",
              ",COPAY_COLLECTED",
              ",COPAY_DUE",
              ",case when ROW# = 1 then coalesce(PB_BALANCE,0) else 0 end as PB_BALANCE",
              ",case when ROW# = 1 then coalesce(HB_BALANCE,0) else 0 end as HB_BALANCE",
              "",
              "from",
              "",
              "(",
              "select ",
              " enc.ACCOUNT_ID",
              ",enc.PAT_ENC_CSN_ID",
              ",date.YEAR_MONTH",
              ",date.MONTHNAME_YEAR",
              ",enc.CONTACT_DATE",
              ",enc.CHECKIN_TIME",
              ",appt_status.NAME as APPT_STATUS",
              ",enc_type.NAME as ENC_TYPE",
              ",upper(sa.NAME) as REGION",
              ",loc.LOC_ID",
              ",dep.DEPARTMENT_NAME",
              ",dep.SPECIALTY",
              ",case when zbg.name in ('Office Visit','PB Copay','Copay') then enc.COPAY_COLLECTED else 0 end as COPAY_COLLECTED",
              ",case when zbg.name in ('Office Visit','PB Copay','Copay') then enc.COPAY_DUE else 0 end as COPAY_DUE",
              ",case when PATIENT_BALANCE < 0 then 0 else PATIENT_BALANCE end as PB_BALANCE",
              ",case when HB_SELFPAY_BALANCE < 0 then 0 else HB_SELFPAY_BALANCE end as HB_BALANCE",
              ",ROW_NUMBER() OVER(PARTITION BY enc.ACCOUNT_ID, enc.CONTACT_DATE ORDER BY enc.PAT_ENC_CSN_ID ASC) as ROW#",
              "",
              "from PAT_ENC enc",
              "left join CLARITY_DEP dep on enc.DEPARTMENT_ID= dep.DEPARTMENT_ID ",
              "left join CLARITY_LOC loc on loc.LOC_ID = dep.REV_LOC_ID",
              "left join ClarityCHPUtil.rpt.PB_DAILY_ACCOUNT_PATIENT_BALANCE bal on bal.ACCOUNT_ID = enc.ACCOUNT_ID and bal.UPDATE_DATE = enc.CONTACT_DATE and PATIENT_BALANCE > 0",
              "left join ZC_DISP_ENC_TYPE enc_type on enc_type.DISP_ENC_TYPE_C = enc.ENC_TYPE_C",
              "left join ZC_APPT_STATUS appt_status on appt_status.APPT_STATUS_C = enc.APPT_STATUS_C",
              "left join CLARITY_PRC prc on prc.PRC_ID = enc.APPT_PRC_ID",
              "left join CLARITY_PRC_2 prc2 on prc2.PRC_ID = prc.PRC_ID",
              "left join ZC_BENEFIT_GROUP zbg on zbg.BENEFIT_GROUP_C = prc2.BENEFIT_GROUP_C",
              "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
              "left join DATE_DIMENSION date on date.CALENDAR_DT = enc.CONTACT_DATE",
              "",
              "where ",
              "enc.APPT_STATUS_C in (2,6) -- ARRIVED OR COMPLETED",
              "and enc.CANCEL_REASON_C is null ",
              "and enc.CONTACT_DATE between @startdate and @enddate",
              "and loc.RPT_GRP_TEN in (11,13,16,17,18,19)",
              "and enc.ACCOUNT_ID is not null",
              "and enc_type.NAME not in ('Hospital encounter','Community Outreach','Scheduled Telephone Encounter','Erroneous Encounter')",
              "--and enc.PAT_ENC_CSN_ID in (180128007,180209008,180209381,168099850,100500018)-- TEST DATE",
              "--and enc.ACCOUNT_ID = 1493493",
              "",
              ")a",
              "),",
              "",
              "CtePayment as",
              "(",
              "select",
              " arpb_tx.ACCOUNT_ID",
              ",cast(arpb_tx.SERVICE_DATE as date) as SERVICE_DATE",
              ",sum(arpb_tx.AMOUNT)*-1 as PATIENT_PAYMENT",
              "from ARPB_TRANSACTIONS arpb_tx",
              "where arpb_tx.TX_TYPE_C = 2",
              "and arpb_tx.PROC_ID = 7084",
              "and arpb_tx.SERVICE_AREA_ID in (11,13,16,17,18,19)",
              "group by",
              " arpb_tx.ACCOUNT_ID",
              ",arpb_tx.SERVICE_DATE",
              ")",
              "",
              "select",
              " a.ACCOUNT_ID",
              ",a.PAT_ENC_CSN_ID",
              ",a.MONTHNAME_YEAR",
              ",a.YEAR_MONTH",
              ",a.CONTACT_DATE",
              ",a.APPT_STATUS",
              ",a.ENC_TYPE",
              ",a.REGION",
              ",a.LOC_ID",
              ",a.DEPARTMENT_NAME",
              ",a.SPECIALTY",
              ",a.COPAY_COLLECTED",
              ",a.COPAY_DUE",
              ",case when a.ROW# = 1 then coalesce(PATIENT_PAYMENT,0) else 0 end as PATIENT_PAYMENT",
              ",a.PB_BALANCE",
              ",a.HB_BALANCE",
              "from",
              "(",
              "select copay.*",
              ",pay.PATIENT_PAYMENT",
              ",ROW_NUMBER() OVER(PARTITION BY copay.ACCOUNT_ID, copay.CONTACT_DATE ORDER BY copay.PAT_ENC_CSN_ID ASC) as ROW#",
              "from CteCopay copay",
              "left join CtePayment pay on pay.ACCOUNT_ID = copay.ACCOUNT_ID and pay.SERVICE_DATE = copay.CONTACT_DATE",
              "",
              ")a</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Daily Balances",
        "columns": [
          {
            "name": "PATIENT_BALANCE",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "PATIENT_BALANCE",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "sourceProviderType": "Decimal",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "HB_SELFPAY_BALANCE",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "HB_SELFPAY_BALANCE",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "sourceProviderType": "Decimal",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "ACCOUNT",
            "dataType": "double",
            "sourceColumn": "ACCOUNT_ID",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "UPDATE DATE",
            "dataType": "dateTime",
            "sourceColumn": "UPDATE_DATE",
            "formatString": "Short Date",
            "sourceProviderType": "Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "PB NEGATIVE",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "if('Daily Balances'[PATIENT_BALANCE]<0,1,0)"
          },
          {
            "type": "calculated",
            "name": "HB NEGATIVE",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "if([HB_SELFPAY_BALANCE]<0,1,0)"
          },
          {
            "type": "calculated",
            "name": "TOTAL_BALANCE",
            "dataType": "decimal",
            "isDataTypeInferred": true,
            "expression": "'Daily Balances'[PATIENT_BALANCE]+'Daily Balances'[HB_SELFPAY_BALANCE]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "TB NEGATIVE",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "if('Daily Balances'[TOTAL_BALANCE]<0,1,0)"
          }
        ],
        "partitions": [
          {
            "name": "Daily Balances",
            "dataView": "full",
            "source": {
              "query": "select * from ClarityCHPUtil.rpt.PB_DAILY_ACCOUNT_PATIENT_BALANCE",
              "dataSource": "Clarity"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select * from ClarityCHPUtil.rpt.PB_DAILY_ACCOUNT_PATIENT_BALANCE</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "PB BALANCE (ACCOUNT)",
            "expression": "sum('Daily Balances'[PATIENT_BALANCE])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "HB BALANCE (ACCOUNT)",
            "expression": "sum('Daily Balances'[HB_SELFPAY_BALANCE])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "TOTAL BALANCE (ACCOUNT)",
            "expression": "[PB BALANCE (ACCOUNT)]+[HB BALANCE (ACCOUNT)]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "select * from ClarityCHPUtil.rpt.PB_DAILY_ACCOUNT_PATIENT_BALANCE"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Daily Balances"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select * from ClarityCHPUtil.rpt.PB_DAILY_ACCOUNT_PATIENT_BALANCE</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "Projection",
        "columns": [
          {
            "name": "ACCOUNT",
            "dataType": "string",
            "sourceColumn": "ACCOUNT",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "REGION",
            "dataType": "string",
            "sourceColumn": "REGION",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SPECIALTY",
            "dataType": "string",
            "sourceColumn": "SPECIALTY",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "APPOINTMENT_STATUS",
            "dataType": "string",
            "sourceColumn": "APPOINTMENT_STATUS",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "COPAY_COLLECTED",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "COPAY_COLLECTED",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "COPAY_DUE",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "COPAY_DUE",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "PB_PATIENT_BALANCE",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "PB_PATIENT_BALANCE",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "HB_PATIENT_BALANCE",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "HB_PATIENT_BALANCE",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "LOC_ID",
            "dataType": "double",
            "sourceColumn": "LOC_ID"
          },
          {
            "type": "calculated",
            "name": "MARKET",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "SWITCH('Projection'[LOC_ID]",
              ",11106,\"SPRINGFIELD\"",
              ",11149,\"SPRINGFIELD\"",
              ",11124,\"SPRINGFIELD\"",
              ",18110,\"MRG\"",
              ",19126,\"MRG\"",
              ",18120,\"DEFIANCE\"",
              ",18121,\"DEFIANCE\"",
              ",19120,\"DEFIANCE\"",
              ",19127,\"DEFIANCE\"",
              ",19107,\"KENTUCKY - OTHER ENTITIES\"",
              ",19108,\"KENTUCKY - OTHER ENTITIES\"",
              ",19116,\"KENTUCKY - OTHER ENTITIES\"",
              ",19118,\"KENTUCKY - OTHER ENTITIES\"",
              ",'Projection'[REGION]",
              ")",
              ""
            ]
          },
          {
            "name": "DEPARTMENT",
            "dataType": "string",
            "sourceColumn": "DEPARTMENT_NAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ENC TYPE",
            "dataType": "string",
            "sourceColumn": "ENCOUNTER TYPE",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "CONTACT DATE",
            "dataType": "dateTime",
            "sourceColumn": "CONTACT_DATE",
            "formatString": "Short Date",
            "sourceProviderType": "Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Projection",
            "dataView": "full",
            "source": {
              "query": [
                "declare @startdate date  = dateadd(d,0,datediff(d,0,getdate())) ---7 days ago",
                "\t\t,@enddate date = dateadd(d,0,datediff(d,0,getdate())+7) ---yesterday",
                "\t\t,@lastdate date = dateadd(d,0,datediff(d,0,getdate())+1); ---8 days ago",
                "select",
                " enc.CONTACT_DATE",
                ",coalesce(cast(enc.ACCOUNT_ID as nvarchar),'UKNOWN ACCOUNT') as ACCOUNT",
                ",upper(sa.NAME) as 'REGION'",
                ",loc.LOC_ID",
                ",dep.DEPARTMENT_NAME",
                ",coalesce(dep.SPECIALTY,'No Specialty') as SPECIALTY",
                ",stat.NAME as 'APPOINTMENT_STATUS'",
                ",type.NAME as 'ENCOUNTER TYPE'",
                ",coalesce(enc.COPAY_COLLECTED,0) as COPAY_COLLECTED",
                ",coalesce(enc.COPAY_DUE,0) as COPAY_DUE",
                ",case when bal.PATIENT_BALANCE < 0 then 0 else coalesce(bal.PATIENT_BALANCE,0) end as PB_PATIENT_BALANCE",
                ",case when bal.HB_SELFPAY_BALANCE <0 then 0 else coalesce(bal.HB_SELFPAY_BALANCE,0) end as HB_PATIENT_BALANCE",
                "",
                "from PAT_ENC enc",
                "left join PAT_ENC_2 enc2 on enc2.PAT_ENC_CSN_ID = enc.PAT_ENC_CSN_ID",
                "left join ZC_APPT_STATUS stat on stat.APPT_STATUS_C = enc.APPT_STATUS_C",
                "--left join CLARITYCHPUTIL.rpt.PB_DAILY_ACCOUNT_PATIENT_BALANCE bal on bal.ACCOUNT_ID = enc.ACCOUNT_ID",
                "left join ",
                "(select",
                "*",
                "from",
                "(",
                "select ",
                "*",
                ",RowNum = ROW_NUMBER() OVER(PARTITION BY ACCOUNT_ID ORDER BY UPDATE_DATE DESC) ",
                "from CLARITYCHPUTIL.rpt.PB_DAILY_ACCOUNT_PATIENT_BALANCE bal",
                ")a",
                "",
                "where rownum = 1) bal on bal.account_id = enc.account_id",
                "",
                "left join CLARITY_DEP dep on dep.DEPARTMENT_ID = enc.DEPARTMENT_ID",
                "left join ZC_DISP_ENC_TYPE type on type.DISP_ENC_TYPE_C = enc.ENC_TYPE_C",
                "left join CLARITY_LOC loc on loc.LOC_ID = dep.REV_LOC_ID",
                "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
                "left join CLARITY_POS pos on pos.POS_ID = enc2.VISIT_POS_ID",
                "left join CLARITY_EPM epm on epm.PAYOR_ID = enc2.VISIT_PAYOR_ID",
                "",
                "where enc.APPT_STATUS_C = 1 -- scheduled",
                "and enc.SERV_AREA_ID in (11,13,16,17,18,19)",
                "and enc.CONTACT_DATE >= @startdate ",
                "and enc.CONTACT_DATE <= @enddate"
              ],
              "dataSource": "Clarity"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>declare @startdate date  = dateadd(d,0,datediff(d,0,getdate())) ---7 days ago",
                  "\t\t,@enddate date = dateadd(d,0,datediff(d,0,getdate())+7) ---yesterday",
                  "\t\t,@lastdate date = dateadd(d,0,datediff(d,0,getdate())+1); ---8 days ago",
                  "select",
                  " enc.CONTACT_DATE",
                  ",coalesce(cast(enc.ACCOUNT_ID as nvarchar),'UKNOWN ACCOUNT') as ACCOUNT",
                  ",upper(sa.NAME) as 'REGION'",
                  ",loc.LOC_ID",
                  ",dep.DEPARTMENT_NAME",
                  ",coalesce(dep.SPECIALTY,'No Specialty') as SPECIALTY",
                  ",stat.NAME as 'APPOINTMENT_STATUS'",
                  ",type.NAME as 'ENCOUNTER TYPE'",
                  ",coalesce(enc.COPAY_COLLECTED,0) as COPAY_COLLECTED",
                  ",coalesce(enc.COPAY_DUE,0) as COPAY_DUE",
                  ",case when bal.PATIENT_BALANCE < 0 then 0 else coalesce(bal.PATIENT_BALANCE,0) end as PB_PATIENT_BALANCE",
                  ",case when bal.HB_SELFPAY_BALANCE <0 then 0 else coalesce(bal.HB_SELFPAY_BALANCE,0) end as HB_PATIENT_BALANCE",
                  "",
                  "from PAT_ENC enc",
                  "left join PAT_ENC_2 enc2 on enc2.PAT_ENC_CSN_ID = enc.PAT_ENC_CSN_ID",
                  "left join ZC_APPT_STATUS stat on stat.APPT_STATUS_C = enc.APPT_STATUS_C",
                  "--left join CLARITYCHPUTIL.rpt.PB_DAILY_ACCOUNT_PATIENT_BALANCE bal on bal.ACCOUNT_ID = enc.ACCOUNT_ID",
                  "left join ",
                  "(select",
                  "*",
                  "from",
                  "(",
                  "select ",
                  "*",
                  ",RowNum = ROW_NUMBER() OVER(PARTITION BY ACCOUNT_ID ORDER BY UPDATE_DATE DESC) ",
                  "from CLARITYCHPUTIL.rpt.PB_DAILY_ACCOUNT_PATIENT_BALANCE bal",
                  ")a",
                  "",
                  "where rownum = 1) bal on bal.account_id = enc.account_id",
                  "",
                  "left join CLARITY_DEP dep on dep.DEPARTMENT_ID = enc.DEPARTMENT_ID",
                  "left join ZC_DISP_ENC_TYPE type on type.DISP_ENC_TYPE_C = enc.ENC_TYPE_C",
                  "left join CLARITY_LOC loc on loc.LOC_ID = dep.REV_LOC_ID",
                  "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
                  "left join CLARITY_POS pos on pos.POS_ID = enc2.VISIT_POS_ID",
                  "left join CLARITY_EPM epm on epm.PAYOR_ID = enc2.VISIT_PAYOR_ID",
                  "",
                  "where enc.APPT_STATUS_C = 1 -- scheduled",
                  "and enc.SERV_AREA_ID in (11,13,16,17,18,19)",
                  "and enc.CONTACT_DATE >= @startdate ",
                  "and enc.CONTACT_DATE <= @enddate</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "COPAY DUE (PROJ)",
            "expression": "sum(Projection[COPAY_DUE])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "PB BALANCE (PROJ)",
            "expression": "sum(Projection[PB_PATIENT_BALANCE])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "HB BALANCE (PROJ)",
            "expression": "sum(Projection[HB_PATIENT_BALANCE])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "TOTAL BALANCE (PROJ)",
            "expression": "[PB BALANCE (PROJ)]+[HB BALANCE (PROJ)]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "declare @startdate date  = dateadd(d,0,datediff(d,0,getdate())) ---7 days ago",
              "\t\t,@enddate date = dateadd(d,0,datediff(d,0,getdate())+7) ---yesterday",
              "\t\t,@lastdate date = dateadd(d,0,datediff(d,0,getdate())+1); ---8 days ago",
              "select",
              " enc.CONTACT_DATE",
              ",coalesce(cast(enc.ACCOUNT_ID as nvarchar),'UKNOWN ACCOUNT') as ACCOUNT",
              ",upper(sa.NAME) as 'REGION'",
              ",loc.LOC_ID",
              ",dep.DEPARTMENT_NAME",
              ",coalesce(dep.SPECIALTY,'No Specialty') as SPECIALTY",
              ",stat.NAME as 'APPOINTMENT_STATUS'",
              ",type.NAME as 'ENCOUNTER TYPE'",
              ",coalesce(enc.COPAY_COLLECTED,0) as COPAY_COLLECTED",
              ",coalesce(enc.COPAY_DUE,0) as COPAY_DUE",
              ",case when bal.PATIENT_BALANCE < 0 then 0 else coalesce(bal.PATIENT_BALANCE,0) end as PB_PATIENT_BALANCE",
              ",case when bal.HB_SELFPAY_BALANCE <0 then 0 else coalesce(bal.HB_SELFPAY_BALANCE,0) end as HB_PATIENT_BALANCE",
              "",
              "from PAT_ENC enc",
              "left join PAT_ENC_2 enc2 on enc2.PAT_ENC_CSN_ID = enc.PAT_ENC_CSN_ID",
              "left join ZC_APPT_STATUS stat on stat.APPT_STATUS_C = enc.APPT_STATUS_C",
              "--left join CLARITYCHPUTIL.rpt.PB_DAILY_ACCOUNT_PATIENT_BALANCE bal on bal.ACCOUNT_ID = enc.ACCOUNT_ID",
              "left join ",
              "(select",
              "*",
              "from",
              "(",
              "select ",
              "*",
              ",RowNum = ROW_NUMBER() OVER(PARTITION BY ACCOUNT_ID ORDER BY UPDATE_DATE DESC) ",
              "from CLARITYCHPUTIL.rpt.PB_DAILY_ACCOUNT_PATIENT_BALANCE bal",
              ")a",
              "",
              "where rownum = 1) bal on bal.account_id = enc.account_id",
              "",
              "left join CLARITY_DEP dep on dep.DEPARTMENT_ID = enc.DEPARTMENT_ID",
              "left join ZC_DISP_ENC_TYPE type on type.DISP_ENC_TYPE_C = enc.ENC_TYPE_C",
              "left join CLARITY_LOC loc on loc.LOC_ID = dep.REV_LOC_ID",
              "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
              "left join CLARITY_POS pos on pos.POS_ID = enc2.VISIT_POS_ID",
              "left join CLARITY_EPM epm on epm.PAYOR_ID = enc2.VISIT_PAYOR_ID",
              "",
              "where enc.APPT_STATUS_C = 1 -- scheduled",
              "and enc.SERV_AREA_ID in (11,13,16,17,18,19)",
              "and enc.CONTACT_DATE >= @startdate ",
              "and enc.CONTACT_DATE <= @enddate"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Projection"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>declare @startdate date  = dateadd(d,0,datediff(d,0,getdate())) ---7 days ago",
              "\t\t,@enddate date = dateadd(d,0,datediff(d,0,getdate())+7) ---yesterday",
              "\t\t,@lastdate date = dateadd(d,0,datediff(d,0,getdate())+1); ---8 days ago",
              "select",
              " enc.CONTACT_DATE",
              ",coalesce(cast(enc.ACCOUNT_ID as nvarchar),'UKNOWN ACCOUNT') as ACCOUNT",
              ",upper(sa.NAME) as 'REGION'",
              ",loc.LOC_ID",
              ",dep.DEPARTMENT_NAME",
              ",coalesce(dep.SPECIALTY,'No Specialty') as SPECIALTY",
              ",stat.NAME as 'APPOINTMENT_STATUS'",
              ",type.NAME as 'ENCOUNTER TYPE'",
              ",coalesce(enc.COPAY_COLLECTED,0) as COPAY_COLLECTED",
              ",coalesce(enc.COPAY_DUE,0) as COPAY_DUE",
              ",case when bal.PATIENT_BALANCE < 0 then 0 else coalesce(bal.PATIENT_BALANCE,0) end as PB_PATIENT_BALANCE",
              ",case when bal.HB_SELFPAY_BALANCE <0 then 0 else coalesce(bal.HB_SELFPAY_BALANCE,0) end as HB_PATIENT_BALANCE",
              "",
              "from PAT_ENC enc",
              "left join PAT_ENC_2 enc2 on enc2.PAT_ENC_CSN_ID = enc.PAT_ENC_CSN_ID",
              "left join ZC_APPT_STATUS stat on stat.APPT_STATUS_C = enc.APPT_STATUS_C",
              "--left join CLARITYCHPUTIL.rpt.PB_DAILY_ACCOUNT_PATIENT_BALANCE bal on bal.ACCOUNT_ID = enc.ACCOUNT_ID",
              "left join ",
              "(select",
              "*",
              "from",
              "(",
              "select ",
              "*",
              ",RowNum = ROW_NUMBER() OVER(PARTITION BY ACCOUNT_ID ORDER BY UPDATE_DATE DESC) ",
              "from CLARITYCHPUTIL.rpt.PB_DAILY_ACCOUNT_PATIENT_BALANCE bal",
              ")a",
              "",
              "where rownum = 1) bal on bal.account_id = enc.account_id",
              "",
              "left join CLARITY_DEP dep on dep.DEPARTMENT_ID = enc.DEPARTMENT_ID",
              "left join ZC_DISP_ENC_TYPE type on type.DISP_ENC_TYPE_C = enc.ENC_TYPE_C",
              "left join CLARITY_LOC loc on loc.LOC_ID = dep.REV_LOC_ID",
              "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
              "left join CLARITY_POS pos on pos.POS_ID = enc2.VISIT_POS_ID",
              "left join CLARITY_EPM epm on epm.PAYOR_ID = enc2.VISIT_PAYOR_ID",
              "",
              "where enc.APPT_STATUS_C = 1 -- scheduled",
              "and enc.SERV_AREA_ID in (11,13,16,17,18,19)",
              "and enc.CONTACT_DATE >= @startdate ",
              "and enc.CONTACT_DATE <= @enddate</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Payments",
        "columns": [
          {
            "name": "REGION ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "REGION ID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "REGION",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "REGION",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "LOCATION ID",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "LOCATION ID",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "LOCATION",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "LOCATION",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DEPARTMENT ID",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DEPARTMENT ID",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "DEPARTMENT",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "DEPARTMENT",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "USER ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "USER ID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "USER",
            "dataType": "string",
            "sourceColumn": "USER",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "PAYMENT",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "PAYMENT",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "RPT_GRP_SIX",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "RPT_GRP_SIX",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "YEAR_MONTH",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "YEAR_MONTH"
          }
        ],
        "partitions": [
          {
            "name": "Payments",
            "dataView": "full",
            "source": {
              "query": [
                "select ",
                " date.YEAR_MONTH",
                ",sa.RPT_GRP_TEN as 'REGION ID'",
                ",upper(sa.NAME) as 'REGION'",
                ",loc.LOC_ID as 'LOCATION ID'",
                ",loc.lOC_NAME as 'LOCATION'",
                ",dep.DEPARTMENT_ID as 'DEPARTMENT ID'",
                ",dep.DEPARTMENT_NAME as 'DEPARTMENT'",
                ",emp.USER_ID as 'USER ID'",
                ",emp.NAME as 'USER'",
                ",arpb_tx.AMOUNT * -1 as 'PAYMENT'",
                ",loc.RPT_GRP_SIX",
                "",
                "from ARPB_TRANSACTIONS arpb_tx",
                "left join CLARITY_EAP eap on eap.PROC_ID = arpb_tx.PROC_ID",
                "left join CLARITY_DEP dep on dep.DEPARTMENT_ID = arpb_tx.DEPARTMENT_ID",
                "left join DATE_DIMENSION date on date.CALENDAR_DT = arpb_tx.POST_DATE",
                "left join CLARITY_LOC loc on loc.LOC_ID = arpb_tx.LOC_ID",
                "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
                "left join CLARITY_EMP emp on emp.USER_ID = arpb_tx.USER_ID",
                "",
                "where arpb_tx.SERVICE_AREA_ID in (19)",
                "and arpb_tx.TX_TYPE_C = 2",
                "and eap.PROC_CODE in ('1000','1001','1002')",
                "and date.YEAR_MONTH >= '201810'",
                "and arpb_tx.DEPARTMENT_ID not in (19000001)",
                "and arpb_tx.LOC_ID not in (",
                "197100, ",
                "197000, ",
                "19106, ",
                "19108, ",
                "19000, ",
                "193300, ",
                "193200, ",
                "193500, ",
                "196100, ",
                "196000, ",
                "19137, ",
                "195000, ",
                "195100, ",
                "195100, ",
                "195400, ",
                "195400, ",
                "194000",
                ")"
              ],
              "dataSource": "Clarity"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
                  " date.YEAR_MONTH",
                  ",sa.RPT_GRP_TEN as 'REGION ID'",
                  ",upper(sa.NAME) as 'REGION'",
                  ",loc.LOC_ID as 'LOCATION ID'",
                  ",loc.lOC_NAME as 'LOCATION'",
                  ",dep.DEPARTMENT_ID as 'DEPARTMENT ID'",
                  ",dep.DEPARTMENT_NAME as 'DEPARTMENT'",
                  ",emp.USER_ID as 'USER ID'",
                  ",emp.NAME as 'USER'",
                  ",arpb_tx.AMOUNT * -1 as 'PAYMENT'",
                  ",loc.RPT_GRP_SIX",
                  "",
                  "from ARPB_TRANSACTIONS arpb_tx",
                  "left join CLARITY_EAP eap on eap.PROC_ID = arpb_tx.PROC_ID",
                  "left join CLARITY_DEP dep on dep.DEPARTMENT_ID = arpb_tx.DEPARTMENT_ID",
                  "left join DATE_DIMENSION date on date.CALENDAR_DT = arpb_tx.POST_DATE",
                  "left join CLARITY_LOC loc on loc.LOC_ID = arpb_tx.LOC_ID",
                  "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
                  "left join CLARITY_EMP emp on emp.USER_ID = arpb_tx.USER_ID",
                  "",
                  "where arpb_tx.SERVICE_AREA_ID in (19)",
                  "and arpb_tx.TX_TYPE_C = 2",
                  "and eap.PROC_CODE in ('1000','1001','1002')",
                  "and date.YEAR_MONTH >= '201810'",
                  "and arpb_tx.DEPARTMENT_ID not in (19000001)",
                  "and arpb_tx.LOC_ID not in (",
                  "197100, ",
                  "197000, ",
                  "19106, ",
                  "19108, ",
                  "19000, ",
                  "193300, ",
                  "193200, ",
                  "193500, ",
                  "196100, ",
                  "196000, ",
                  "19137, ",
                  "195000, ",
                  "195100, ",
                  "195100, ",
                  "195400, ",
                  "195400, ",
                  "194000",
                  ")</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "PAYMENTS",
            "expression": "sum(Payments[PAYMENT])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select ",
              " date.YEAR_MONTH",
              ",sa.RPT_GRP_TEN as 'REGION ID'",
              ",upper(sa.NAME) as 'REGION'",
              ",loc.LOC_ID as 'LOCATION ID'",
              ",loc.lOC_NAME as 'LOCATION'",
              ",dep.DEPARTMENT_ID as 'DEPARTMENT ID'",
              ",dep.DEPARTMENT_NAME as 'DEPARTMENT'",
              ",emp.USER_ID as 'USER ID'",
              ",emp.NAME as 'USER'",
              ",arpb_tx.AMOUNT * -1 as 'PAYMENT'",
              ",loc.RPT_GRP_SIX",
              "",
              "from ARPB_TRANSACTIONS arpb_tx",
              "left join CLARITY_EAP eap on eap.PROC_ID = arpb_tx.PROC_ID",
              "left join CLARITY_DEP dep on dep.DEPARTMENT_ID = arpb_tx.DEPARTMENT_ID",
              "left join DATE_DIMENSION date on date.CALENDAR_DT = arpb_tx.POST_DATE",
              "left join CLARITY_LOC loc on loc.LOC_ID = arpb_tx.LOC_ID",
              "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
              "left join CLARITY_EMP emp on emp.USER_ID = arpb_tx.USER_ID",
              "",
              "where arpb_tx.SERVICE_AREA_ID in (19)",
              "and arpb_tx.TX_TYPE_C = 2",
              "and eap.PROC_CODE in ('1000','1001','1002')",
              "and date.YEAR_MONTH >= '201810'",
              "and arpb_tx.DEPARTMENT_ID not in (19000001)",
              "and arpb_tx.LOC_ID not in (",
              "197100, ",
              "197000, ",
              "19106, ",
              "19108, ",
              "19000, ",
              "193300, ",
              "193200, ",
              "193500, ",
              "196100, ",
              "196000, ",
              "19137, ",
              "195000, ",
              "195100, ",
              "195100, ",
              "195400, ",
              "195400, ",
              "194000",
              ")"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Payments"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select ",
              " date.YEAR_MONTH",
              ",sa.RPT_GRP_TEN as 'REGION ID'",
              ",upper(sa.NAME) as 'REGION'",
              ",loc.LOC_ID as 'LOCATION ID'",
              ",loc.lOC_NAME as 'LOCATION'",
              ",dep.DEPARTMENT_ID as 'DEPARTMENT ID'",
              ",dep.DEPARTMENT_NAME as 'DEPARTMENT'",
              ",emp.USER_ID as 'USER ID'",
              ",emp.NAME as 'USER'",
              ",arpb_tx.AMOUNT * -1 as 'PAYMENT'",
              ",loc.RPT_GRP_SIX",
              "",
              "from ARPB_TRANSACTIONS arpb_tx",
              "left join CLARITY_EAP eap on eap.PROC_ID = arpb_tx.PROC_ID",
              "left join CLARITY_DEP dep on dep.DEPARTMENT_ID = arpb_tx.DEPARTMENT_ID",
              "left join DATE_DIMENSION date on date.CALENDAR_DT = arpb_tx.POST_DATE",
              "left join CLARITY_LOC loc on loc.LOC_ID = arpb_tx.LOC_ID",
              "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
              "left join CLARITY_EMP emp on emp.USER_ID = arpb_tx.USER_ID",
              "",
              "where arpb_tx.SERVICE_AREA_ID in (19)",
              "and arpb_tx.TX_TYPE_C = 2",
              "and eap.PROC_CODE in ('1000','1001','1002')",
              "and date.YEAR_MONTH >= '201810'",
              "and arpb_tx.DEPARTMENT_ID not in (19000001)",
              "and arpb_tx.LOC_ID not in (",
              "197100, ",
              "197000, ",
              "19106, ",
              "19108, ",
              "19000, ",
              "193300, ",
              "193200, ",
              "193500, ",
              "196100, ",
              "196000, ",
              "19137, ",
              "195000, ",
              "195100, ",
              "195100, ",
              "195400, ",
              "195400, ",
              "194000",
              ")</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Goals",
        "columns": [
          {
            "name": "DEPARTMENT_ID",
            "dataType": "int64",
            "sourceColumn": "DEPARTMENT_ID",
            "sourceProviderType": "Integer"
          },
          {
            "name": "YEAR_MONTH",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MONTH_YEAR",
            "sourceProviderType": "Integer"
          },
          {
            "name": "MONTHLY_GOAL",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "MONTHLY_GOAL",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "BUS_DAYS",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BUS_DAYS",
            "sourceProviderType": "Integer"
          },
          {
            "name": "DAILY_GOAL",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DAILY_GOAL",
            "sourceProviderType": "Decimal"
          }
        ],
        "partitions": [
          {
            "name": "Goals",
            "dataView": "full",
            "source": {
              "query": [
                "with dates as",
                "(",
                "select distinct",
                "date.YEAR_MONTH",
                ",date.MONTHNAME_YEAR",
                "",
                "from DATE_DIMENSION date",
                "where YEAR_MONTH >= '201810'",
                "and calendar_dt <= getdate() -1 ",
                "),",
                "",
                "goals as ",
                "(",
                "select ",
                "* ",
                "from dates",
                "left join ClarityCHPUtil.rpt.PB_FRONT_DESK_GOALS goals on goals.MONTH_YEAR = dates.YEAR_MONTH",
                "",
                ")",
                "",
                "select ",
                " DEPARTMENT_ID, MONTH_YEAR, MONTHLY_GOAL, BUS_DAYS, DAILY_GOAL",
                "from goals"
              ],
              "dataSource": "Clarity"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>with dates as",
                  "(",
                  "select distinct",
                  "date.YEAR_MONTH",
                  ",date.MONTHNAME_YEAR",
                  "",
                  "from DATE_DIMENSION date",
                  "where YEAR_MONTH >= '201810'",
                  "and calendar_dt <= getdate() -1 ",
                  "),",
                  "",
                  "goals as ",
                  "(",
                  "select ",
                  "* ",
                  "from dates",
                  "left join ClarityCHPUtil.rpt.PB_FRONT_DESK_GOALS goals on goals.MONTH_YEAR = dates.YEAR_MONTH",
                  "",
                  ")",
                  "",
                  "select ",
                  " DEPARTMENT_ID, MONTH_YEAR, MONTHLY_GOAL, BUS_DAYS, DAILY_GOAL",
                  "from goals</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "MONTHLY GOAL",
            "expression": "sum(Goals[MONTHLY_GOAL])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "with dates as",
              "(",
              "select distinct",
              "date.YEAR_MONTH",
              ",date.MONTHNAME_YEAR",
              "",
              "from DATE_DIMENSION date",
              "where YEAR_MONTH >= '201810'",
              "and calendar_dt <= getdate() -1 ",
              "),",
              "",
              "goals as ",
              "(",
              "select ",
              "* ",
              "from dates",
              "left join ClarityCHPUtil.rpt.PB_FRONT_DESK_GOALS goals on goals.MONTH_YEAR = dates.YEAR_MONTH",
              "",
              ")",
              "",
              "select ",
              " DEPARTMENT_ID, MONTH_YEAR, MONTHLY_GOAL, BUS_DAYS, DAILY_GOAL",
              "from goals"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Goals"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>with dates as",
              "(",
              "select distinct",
              "date.YEAR_MONTH",
              ",date.MONTHNAME_YEAR",
              "",
              "from DATE_DIMENSION date",
              "where YEAR_MONTH >= '201810'",
              "and calendar_dt <= getdate() -1 ",
              "),",
              "",
              "goals as ",
              "(",
              "select ",
              "* ",
              "from dates",
              "left join ClarityCHPUtil.rpt.PB_FRONT_DESK_GOALS goals on goals.MONTH_YEAR = dates.YEAR_MONTH",
              "",
              ")",
              "",
              "select ",
              " DEPARTMENT_ID, MONTH_YEAR, MONTHLY_GOAL, BUS_DAYS, DAILY_GOAL",
              "from goals</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Departments",
        "columns": [
          {
            "name": "DEPARTMENT_ID",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "DEPARTMENT_ID",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "DEPARTMENT_NAME",
            "dataType": "string",
            "sourceColumn": "DEPARTMENT_NAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "LOC_ID",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "LOC_ID",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "LOC_NAME",
            "dataType": "string",
            "sourceColumn": "LOC_NAME",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "REGION_ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "REGION_ID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "REGION",
            "dataType": "string",
            "sourceColumn": "REGION",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "Departments",
            "dataView": "full",
            "source": {
              "query": [
                "select distinct ",
                " dep.DEPARTMENT_ID",
                ",dep.DEPARTMENT_NAME",
                ",loc.LOC_ID",
                ",loc.LOC_NAME",
                ",sa.RPT_GRP_TEN as REGION_ID",
                ",upper(sa.NAME) as REGION",
                "from ARPB_TRANSACTIONS arpb_tx",
                "left join CLARITY_EAP eap on eap.PROC_ID = arpb_tx.PROC_ID",
                "left join CLARITY_DEP dep on dep.DEPARTMENT_ID = arpb_tx.DEPARTMENT_ID",
                "left join DATE_DIMENSION date on date.CALENDAR_DT = arpb_tx.POST_DATE",
                "left join CLARITY_LOC loc on loc.LOC_ID = arpb_tx.LOC_ID",
                "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
                "left join CLARITY_EMP emp on emp.USER_ID = arpb_tx.USER_ID",
                "",
                "where arpb_tx.SERVICE_AREA_ID in (19)",
                "and arpb_tx.TX_TYPE_C = 2",
                "and eap.PROC_CODE in ('1000','1001','1002')",
                "and date.YEAR_MONTH >= '201810'",
                "",
                "order by dep.DEPARTMENT_ID"
              ],
              "dataSource": "Clarity"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct ",
                  " dep.DEPARTMENT_ID",
                  ",dep.DEPARTMENT_NAME",
                  ",loc.LOC_ID",
                  ",loc.LOC_NAME",
                  ",sa.RPT_GRP_TEN as REGION_ID",
                  ",upper(sa.NAME) as REGION",
                  "from ARPB_TRANSACTIONS arpb_tx",
                  "left join CLARITY_EAP eap on eap.PROC_ID = arpb_tx.PROC_ID",
                  "left join CLARITY_DEP dep on dep.DEPARTMENT_ID = arpb_tx.DEPARTMENT_ID",
                  "left join DATE_DIMENSION date on date.CALENDAR_DT = arpb_tx.POST_DATE",
                  "left join CLARITY_LOC loc on loc.LOC_ID = arpb_tx.LOC_ID",
                  "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
                  "left join CLARITY_EMP emp on emp.USER_ID = arpb_tx.USER_ID",
                  "",
                  "where arpb_tx.SERVICE_AREA_ID in (19)",
                  "and arpb_tx.TX_TYPE_C = 2",
                  "and eap.PROC_CODE in ('1000','1001','1002')",
                  "and date.YEAR_MONTH >= '201810'",
                  "",
                  "order by dep.DEPARTMENT_ID</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select distinct ",
              " dep.DEPARTMENT_ID",
              ",dep.DEPARTMENT_NAME",
              ",loc.LOC_ID",
              ",loc.LOC_NAME",
              ",sa.RPT_GRP_TEN as REGION_ID",
              ",upper(sa.NAME) as REGION",
              "from ARPB_TRANSACTIONS arpb_tx",
              "left join CLARITY_EAP eap on eap.PROC_ID = arpb_tx.PROC_ID",
              "left join CLARITY_DEP dep on dep.DEPARTMENT_ID = arpb_tx.DEPARTMENT_ID",
              "left join DATE_DIMENSION date on date.CALENDAR_DT = arpb_tx.POST_DATE",
              "left join CLARITY_LOC loc on loc.LOC_ID = arpb_tx.LOC_ID",
              "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
              "left join CLARITY_EMP emp on emp.USER_ID = arpb_tx.USER_ID",
              "",
              "where arpb_tx.SERVICE_AREA_ID in (19)",
              "and arpb_tx.TX_TYPE_C = 2",
              "and eap.PROC_CODE in ('1000','1001','1002')",
              "and date.YEAR_MONTH >= '201810'",
              "",
              "order by dep.DEPARTMENT_ID"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Departments"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct ",
              " dep.DEPARTMENT_ID",
              ",dep.DEPARTMENT_NAME",
              ",loc.LOC_ID",
              ",loc.LOC_NAME",
              ",sa.RPT_GRP_TEN as REGION_ID",
              ",upper(sa.NAME) as REGION",
              "from ARPB_TRANSACTIONS arpb_tx",
              "left join CLARITY_EAP eap on eap.PROC_ID = arpb_tx.PROC_ID",
              "left join CLARITY_DEP dep on dep.DEPARTMENT_ID = arpb_tx.DEPARTMENT_ID",
              "left join DATE_DIMENSION date on date.CALENDAR_DT = arpb_tx.POST_DATE",
              "left join CLARITY_LOC loc on loc.LOC_ID = arpb_tx.LOC_ID",
              "left join ZC_LOC_RPT_GRP_10 sa on sa.RPT_GRP_TEN = loc.RPT_GRP_TEN",
              "left join CLARITY_EMP emp on emp.USER_ID = arpb_tx.USER_ID",
              "",
              "where arpb_tx.SERVICE_AREA_ID in (19)",
              "and arpb_tx.TX_TYPE_C = 2",
              "and eap.PROC_CODE in ('1000','1001','1002')",
              "and date.YEAR_MONTH >= '201810'",
              "",
              "order by dep.DEPARTMENT_ID</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Date",
        "columns": [
          {
            "name": "YEAR_MONTH",
            "dataType": "string",
            "sourceColumn": "YEAR_MONTH",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "MONTHNAME_YEAR",
            "dataType": "string",
            "sourceColumn": "MONTHNAME_YEAR",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "Date",
            "dataView": "full",
            "source": {
              "query": [
                "select distinct",
                "date.YEAR_MONTH",
                ",date.MONTHNAME_YEAR",
                "",
                "from DATE_DIMENSION date",
                "where YEAR_MONTH >= '201810'",
                "and calendar_dt <= getdate()-1"
              ],
              "dataSource": "Clarity"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct",
                  "date.YEAR_MONTH",
                  ",date.MONTHNAME_YEAR",
                  "",
                  "from DATE_DIMENSION date",
                  "where YEAR_MONTH >= '201810'",
                  "and calendar_dt <= getdate()-1</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select distinct",
              "date.YEAR_MONTH",
              ",date.MONTHNAME_YEAR",
              "",
              "from DATE_DIMENSION date",
              "where YEAR_MONTH >= '201810'",
              "and calendar_dt <= getdate()-1"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Date"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct",
              "date.YEAR_MONTH",
              ",date.MONTHNAME_YEAR",
              "",
              "from DATE_DIMENSION date",
              "where YEAR_MONTH >= '201810'",
              "and calendar_dt <= getdate()-1</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "4bfc6b00-356f-4188-a57e-93d6639ade60",
        "fromTable": "Payments",
        "fromColumn": "DEPARTMENT ID",
        "toTable": "Departments",
        "toColumn": "DEPARTMENT_ID"
      },
      {
        "name": "b7a9b1c3-24e3-40ed-b335-e573205e5874",
        "fromTable": "Goals",
        "fromColumn": "DEPARTMENT_ID",
        "toTable": "Departments",
        "toColumn": "DEPARTMENT_ID"
      },
      {
        "name": "b05e88d6-59a0-4f9d-98a5-2c718bad725d",
        "fromTable": "Payments",
        "fromColumn": "YEAR_MONTH",
        "toTable": "Date",
        "toColumn": "YEAR_MONTH"
      },
      {
        "name": "303b371d-8394-4974-94a3-f7a44d3fa2ad",
        "fromTable": "Goals",
        "fromColumn": "YEAR_MONTH",
        "toTable": "Date",
        "toColumn": "YEAR_MONTH"
      }
    ],
    "roles": [
      {
        "name": "PB Users",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "MDCO\\Corp-EPIC_Clarity_PBUsers",
            "memberId": "S-1-5-21-448539723-1085031214-725345543-311518"
          },
          {
            "memberName": "MDCO\\Corp-EPIC_Clarity_Reporting_Group",
            "memberId": "S-1-5-21-448539723-1085031214-725345543-141188"
          }
        ]
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "400"
      }
    ]
  },
  "id": "SemanticModel"
}